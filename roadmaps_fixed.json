{
  "python": {
    "domain": "programming languages",
    "beginner": [
      "syntax, data structures, functions, modules, virtual environments.",
      "write cli utilities and scripts.",
      "project: calculator + unit tests",
      "project: to-do app with file or sqlite storage",
      "use: pip/uv, virtualenv/venv"
    ],
    "intermediate": [
      "data handling with pandas/numpy; http with requests.",
      "concurrency: threading vs asyncio.",
      "project: web scraper with beautifulsoup/scrapy",
      "project: fastapi microservice with crud and auth",
      "use: pydantic, pytest, typer/click"
    ],
    "advanced": [
      "packaging, wheels, and publishing to pypi.",
      "performance: profiling (cprofile), vectorization, cython/numba.",
      "project: etl pipeline orchestrated by airflow",
      "project: ml model training with scikit-learn and mlflow",
      "use: poetry/uv, logging/structlog"
    ],
    "expert": [
      "design libraries with clean apis and type hints.",
      "contribute to cpython or major libraries.",
      "project: open-source toolkit (e.g., data validation library)",
      "project: high-performance service with asyncio + uvloop",
      "use: pep 8/484/561, mypy, ruff"
    ],
    "careers": [
      "Data Scientist",
      "Data Analyst",
      "Machine Learning Engineer",
      "Backend Developer",
      "AI Engineer"
    ]
  },
  "java": {
    "domain": "programming languages",
    "beginner": [
      "oop, collections, streams, generics.",
      "build a console app with maven/gradle.",
      "project: cli bank account simulator",
      "project: rest api with spring boot",
      "use: junit5, lombok, mapstruct"
    ],
    "intermediate": [
      "spring boot di, jpa/hibernate, validations.",
      "dockerize and run with postgres.",
      "project: e-commerce backend with spring security + jwt",
      "project: batch jobs with spring batch",
      "use: testcontainers, flyway/liquibase"
    ],
    "advanced": [
      "reactive stack (webflux), grpc.",
      "performance tuning (gc, heap, thread pools).",
      "project: high-throughput event consumer with kafka",
      "project: graphql with dgs or netflix libraries",
      "use: micrometer + prometheus, opentelemetry"
    ],
    "expert": [
      "ddd, cqrs, hexagonal architecture.",
      "contribute to spring or build a popular starter.",
      "project: multi-module monorepo for services",
      "project: design doc: multi-region order system",
      "use: armeria, resilience4j"
    ],
    "careers": [
      "Backend Developer",
      "Android Developer",
      "Software Engineer",
      "Enterprise Application Developer"
    ]
  },
  "c++": {
    "domain": "programming languages",
    "beginner": [
      "c++17/20 syntax, raii, stl containers/algorithms.",
      "cmake and build systems.",
      "project: console game (snake)",
      "project: file indexer with multithreading",
      "use: catch2/googletest, spdlog"
    ],
    "intermediate": [
      "templates, move semantics, smart pointers.",
      "networking and concurrency.",
      "project: http server with boost.beast",
      "project: image processing with opencv",
      "use: boost, fmt"
    ],
    "advanced": [
      "profiling, cache optimization, lock-free structures.",
      "modern graphics (vulkan/opengl).",
      "project: high-performance message queue",
      "project: 3d renderer basics",
      "use: perf/vtune, folly"
    ],
    "expert": [
      "contribute to major c++ libs or compiler.",
      "design cross-platform libraries.",
      "project: cross-platform sdk",
      "project: static analysis tools with clang tooling",
      "use: clang/llvm, sanitizer suite"
    ],
    "careers": [
      "Systems Programmer",
      "Game Developer",
      "Embedded Systems Engineer",
      "High-Performance Computing Engineer"
    ]
  },
  "c#": {
    "domain": "programming languages",
    "beginner": [
      "c#: syntax, idioms, build toolchain, and testing.",
      "write small cli tools and unit tests.",
      "project: c# cli to parse csv and output json",
      "project: simple http service in c#",
      "use: linters/formatters, debugger"
    ],
    "intermediate": [
      "concurrency/async patterns, packages/modules.",
      "standard library mastery and i/o.",
      "project: implement a url shortener service in c#",
      "project: data processing pipeline using c#",
      "use: testing frameworks, profiling tools"
    ],
    "advanced": [
      "performance tuning, memory profiling, and packaging.",
      "ffi or interop with other languages.",
      "project: build a plugin system or compiler front-end in c#",
      "project: high-throughput server in c#",
      "use: tracing, benchmarking"
    ],
    "expert": [
      "design idiomatic libraries and contribute to the ecosystem.",
      "security best practices and supply chain hardening.",
      "project: open-source c# framework",
      "project: c# sdk for a public api",
      "use: static analysis, fuzzing"
    ],
    "careers": [
      "Game Developer (Unity)",
      "Backend Developer (.NET)",
      "Desktop Application Developer",
      "Enterprise Software Engineer"
    ]
  },
  "go": {
    "domain": "programming languages",
    "beginner": [
      "tooling (go mod), slices, maps, methods, interfaces.",
      "write a simple http server.",
      "project: cli url shortener",
      "project: rest api with gin/fiber",
      "use: cobra, testify"
    ],
    "intermediate": [
      "concurrency with goroutines and channels.",
      "database access and migrations.",
      "project: worker pool for image processing",
      "project: graphql server with gqlgen",
      "use: gorm/sqlx, zap/logrus"
    ],
    "advanced": [
      "context cancellation, backpressure, rate limiting.",
      "grpc services with protobuf.",
      "project: telemetry-enabled microservice",
      "project: service communicating over nats/kafka",
      "use: opentelemetry, prometheus client"
    ],
    "expert": [
      "performance profiling (pprof), memory optimization.",
      "build and maintain oss libraries.",
      "project: high-performance proxy server",
      "project: operator for kubernetes using go",
      "use: operator sdk, wire"
    ],
    "careers": [
      "Cloud Engineer",
      "Backend Developer",
      "DevOps Engineer",
      "Microservices Developer"
    ]
  },
  "rust": {
    "domain": "programming languages",
    "beginner": [
      "ownership, borrowing, lifetimes, cargo basics.",
      "implement cli apps and tests.",
      "project: cli password manager",
      "project: rest with actix/tide/axum",
      "use: serde, anyhow/thiserror"
    ],
    "intermediate": [
      "concurrency with async/await (tokio).",
      "ffi and unsafe basics.",
      "project: websocket chat server",
      "project: wasm app with yew/leptos",
      "use: sqlx/diesel, tracing"
    ],
    "advanced": [
      "zero-cost abstractions, performance profiling.",
      "macros and procedural derives.",
      "project: high-performance service with axum + tower",
      "project: embedded target (no_std) demo",
      "use: criterion, crossbeam"
    ],
    "expert": [
      "contribute to rust ecosystem or compiler.",
      "design crates with excellent ergonomics and docs.",
      "project: async runtime contribution",
      "project: design a production-grade sdk",
      "use: miri, rust analyzer internals"
    ],
    "careers": [
      "Systems Programmer",
      "Blockchain Developer",
      "Embedded Systems Engineer",
      "Security Engineer"
    ]
  },
  "swift": {
    "domain": "programming languages",
    "beginner": [
      "swift: syntax, idioms, build toolchain, and testing.",
      "write small cli tools and unit tests.",
      "project: swift cli to parse csv and output json",
      "project: simple http service in swift",
      "use: linters/formatters, debugger"
    ],
    "intermediate": [
      "concurrency/async patterns, packages/modules.",
      "standard library mastery and i/o.",
      "project: implement a url shortener service in swift",
      "project: data processing pipeline using swift",
      "use: testing frameworks, profiling tools"
    ],
    "advanced": [
      "performance tuning, memory profiling, and packaging.",
      "ffi or interop with other languages.",
      "project: build a plugin system or compiler front-end in swift",
      "project: high-throughput server in swift",
      "use: tracing, benchmarking"
    ],
    "expert": [
      "design idiomatic libraries and contribute to the ecosystem.",
      "security best practices and supply chain hardening.",
      "project: open-source swift framework",
      "project: swift sdk for a public api",
      "use: static analysis, fuzzing"
    ],
    "careers": [
      "iOS Developer",
      "Mobile Application Engineer"
    ]
  },
  "kotlin": {
    "domain": "programming languages",
    "beginner": [
      "kotlin: syntax, idioms, build toolchain, and testing.",
      "write small cli tools and unit tests.",
      "project: kotlin cli to parse csv and output json",
      "project: simple http service in kotlin",
      "use: linters/formatters, debugger"
    ],
    "intermediate": [
      "concurrency/async patterns, packages/modules.",
      "standard library mastery and i/o.",
      "project: implement a url shortener service in kotlin",
      "project: data processing pipeline using kotlin",
      "use: testing frameworks, profiling tools"
    ],
    "advanced": [
      "performance tuning, memory profiling, and packaging.",
      "ffi or interop with other languages.",
      "project: build a plugin system or compiler front-end in kotlin",
      "project: high-throughput server in kotlin",
      "use: tracing, benchmarking"
    ],
    "expert": [
      "design idiomatic libraries and contribute to the ecosystem.",
      "security best practices and supply chain hardening.",
      "project: open-source kotlin framework",
      "project: kotlin sdk for a public api",
      "use: static analysis, fuzzing"
    ],
    "careers": [
      "Android Developer",
      "Mobile Application Engineer"
    ]
  },
  "php": {
    "domain": "programming languages",
    "beginner": [
      "php: syntax, idioms, build toolchain, and testing.",
      "write small cli tools and unit tests.",
      "project: php cli to parse csv and output json",
      "project: simple http service in php",
      "use: linters/formatters, debugger"
    ],
    "intermediate": [
      "concurrency/async patterns, packages/modules.",
      "standard library mastery and i/o.",
      "project: implement a url shortener service in php",
      "project: data processing pipeline using php",
      "use: testing frameworks, profiling tools"
    ],
    "advanced": [
      "performance tuning, memory profiling, and packaging.",
      "ffi or interop with other languages.",
      "project: build a plugin system or compiler front-end in php",
      "project: high-throughput server in php",
      "use: tracing, benchmarking"
    ],
    "expert": [
      "design idiomatic libraries and contribute to the ecosystem.",
      "security best practices and supply chain hardening.",
      "project: open-source php framework",
      "project: php sdk for a public api",
      "use: static analysis, fuzzing"
    ],
    "careers": [
      "Backend Developer",
      "Full-Stack Web Developer"
    ]
  },
  "r": {
    "domain": "programming languages",
    "beginner": [
      "r syntax, vectors, data frames, tidyverse.",
      "plotting with ggplot2.",
      "project: exploratory analysis on a public dataset",
      "project: reproducible report with rmarkdown",
      "use: dplyr, tidyr"
    ],
    "intermediate": [
      "modeling with caret/tidymodels.",
      "apis and web scraping.",
      "project: time series forecasting",
      "project: shiny dashboard for kpis",
      "use: forecast, plumber, shiny"
    ],
    "advanced": [
      "customized ggplot themes, interactive visualizations.",
      "package development and unit testing.",
      "project: cran-ready package",
      "project: etl pipeline combining r and python",
      "use: devtools, testthat, reticulate"
    ],
    "expert": [
      "advanced statistical modeling and causal inference.",
      "scale analytics with sparklyr/arrow.",
      "project: causal analysis case study",
      "project: distributed analytics with sparklyr",
      "use: brms, data.table, arrow"
    ],
    "careers": [
      "Data Scientist",
      "Statistician",
      "Quantitative Analyst",
      "Research Scientist"
    ]
  },
  "ruby": {
    "domain": "programming languages",
    "beginner": [
      "ruby: syntax, idioms, build toolchain, and testing.",
      "write small cli tools and unit tests.",
      "project: ruby cli to parse csv and output json",
      "project: simple http service in ruby",
      "use: linters/formatters, debugger"
    ],
    "intermediate": [
      "concurrency/async patterns, packages/modules.",
      "standard library mastery and i/o.",
      "project: implement a url shortener service in ruby",
      "project: data processing pipeline using ruby",
      "use: testing frameworks, profiling tools"
    ],
    "advanced": [
      "performance tuning, memory profiling, and packaging.",
      "ffi or interop with other languages.",
      "project: build a plugin system or compiler front-end in ruby",
      "project: high-throughput server in ruby",
      "use: tracing, benchmarking"
    ],
    "expert": [
      "design idiomatic libraries and contribute to the ecosystem.",
      "security best practices and supply chain hardening.",
      "project: open-source ruby framework",
      "project: ruby sdk for a public api",
      "use: static analysis, fuzzing"
    ],
    "careers": [
      "Web Developer (Rails)",
      "Backend Developer",
      "Full-Stack Developer"
    ]
  },
  "typescript": {
    "domain": "programming languages",
    "beginner": [
      "es6+ syntax, modules, dom apis, typescript basics (if ts).",
      "build simple interactive pages without frameworks.",
      "project: vanilla js gallery, form validator",
      "project: ts cli tool with argument parsing",
      "use: ts-node/tsx, vitest/jest"
    ],
    "intermediate": [
      "node.js runtime, npm/yarn/pnpm, bundlers (vite).",
      "http servers and apis.",
      "project: express/nest api with jwt",
      "project: ssr app with next.js + rest/graphql",
      "use: eslint/prettier, zod/io-ts"
    ],
    "advanced": [
      "event loop deep-dive, streams, workers.",
      "performance profiling and memory leaks.",
      "project: realtime websocket server",
      "project: monorepo with turborepo and shared packages",
      "use: playwright/cypress, opentelemetry"
    ],
    "expert": [
      "build reusable libraries and publish to npm.",
      "security: supply chain, npm audit, sca.",
      "project: framework-agnostic ui library",
      "project: edge functions (cloudflare workers, vercel)",
      "use: rollup, changesets, semantic-release"
    ],
    "careers": [
      "Frontend Developer",
      "Full-Stack Developer",
      "Web Application Engineer"
    ]
  },
  "javascript": {
    "domain": "programming languages",
    "beginner": [
      "es6+ syntax, modules, dom apis, typescript basics (if ts).",
      "build simple interactive pages without frameworks.",
      "project: vanilla js gallery, form validator",
      "project: ts cli tool with argument parsing",
      "use: ts-node/tsx, vitest/jest"
    ],
    "intermediate": [
      "node.js runtime, npm/yarn/pnpm, bundlers (vite).",
      "http servers and apis.",
      "project: express/nest api with jwt",
      "project: ssr app with next.js + rest/graphql",
      "use: eslint/prettier, zod/io-ts"
    ],
    "advanced": [
      "event loop deep-dive, streams, workers.",
      "performance profiling and memory leaks.",
      "project: realtime websocket server",
      "project: monorepo with turborepo and shared packages",
      "use: playwright/cypress, opentelemetry"
    ],
    "expert": [
      "build reusable libraries and publish to npm.",
      "security: supply chain, npm audit, sca.",
      "project: framework-agnostic ui library",
      "project: edge functions (cloudflare workers, vercel)",
      "use: rollup, changesets, semantic-release"
    ],
    "careers": [
      "Frontend Developer",
      "Full-Stack Developer",
      "Web Application Engineer"
    ]
  },
  "scala": {
    "domain": "programming languages",
    "beginner": [
      "scala: syntax, idioms, build toolchain, and testing.",
      "write small cli tools and unit tests.",
      "project: scala cli to parse csv and output json",
      "project: simple http service in scala",
      "use: linters/formatters, debugger"
    ],
    "intermediate": [
      "concurrency/async patterns, packages/modules.",
      "standard library mastery and i/o.",
      "project: implement a url shortener service in scala",
      "project: data processing pipeline using scala",
      "use: testing frameworks, profiling tools"
    ],
    "advanced": [
      "performance tuning, memory profiling, and packaging.",
      "ffi or interop with other languages.",
      "project: build a plugin system or compiler front-end in scala",
      "project: high-throughput server in scala",
      "use: tracing, benchmarking"
    ],
    "expert": [
      "design idiomatic libraries and contribute to the ecosystem.",
      "security best practices and supply chain hardening.",
      "project: open-source scala framework",
      "project: scala sdk for a public api",
      "use: static analysis, fuzzing"
    ],
    "careers": [
      "Big Data Engineer",
      "Backend Developer",
      "Functional Programmer"
    ]
  },
  "perl": {
    "domain": "programming languages",
    "beginner": [
      "perl: syntax, idioms, build toolchain, and testing.",
      "write small cli tools and unit tests.",
      "project: perl cli to parse csv and output json",
      "project: simple http service in perl",
      "use: linters/formatters, debugger"
    ],
    "intermediate": [
      "concurrency/async patterns, packages/modules.",
      "standard library mastery and i/o.",
      "project: implement a url shortener service in perl",
      "project: data processing pipeline using perl",
      "use: testing frameworks, profiling tools"
    ],
    "advanced": [
      "performance tuning, memory profiling, and packaging.",
      "ffi or interop with other languages.",
      "project: build a plugin system or compiler front-end in perl",
      "project: high-throughput server in perl",
      "use: tracing, benchmarking"
    ],
    "expert": [
      "design idiomatic libraries and contribute to the ecosystem.",
      "security best practices and supply chain hardening.",
      "project: open-source perl framework",
      "project: perl sdk for a public api",
      "use: static analysis, fuzzing"
    ],
    "careers": [
      "Scripting Engineer",
      "System Administrator",
      "Data Engineer"
    ]
  },
  "haskell": {
    "domain": "programming languages",
    "beginner": [
      "haskell: syntax, idioms, build toolchain, and testing.",
      "write small cli tools and unit tests.",
      "project: haskell cli to parse csv and output json",
      "project: simple http service in haskell",
      "use: linters/formatters, debugger"
    ],
    "intermediate": [
      "concurrency/async patterns, packages/modules.",
      "standard library mastery and i/o.",
      "project: implement a url shortener service in haskell",
      "project: data processing pipeline using haskell",
      "use: testing frameworks, profiling tools"
    ],
    "advanced": [
      "performance tuning, memory profiling, and packaging.",
      "ffi or interop with other languages.",
      "project: build a plugin system or compiler front-end in haskell",
      "project: high-throughput server in haskell",
      "use: tracing, benchmarking"
    ],
    "expert": [
      "design idiomatic libraries and contribute to the ecosystem.",
      "security best practices and supply chain hardening.",
      "project: open-source haskell framework",
      "project: haskell sdk for a public api",
      "use: static analysis, fuzzing"
    ],
    "careers": [
      "Functional Programmer",
      "Research Engineer",
      "Compiler Developer"
    ]
  },
  "lua": {
    "domain": "programming languages",
    "beginner": [
      "lua: syntax, idioms, build toolchain, and testing.",
      "write small cli tools and unit tests.",
      "project: lua cli to parse csv and output json",
      "project: simple http service in lua",
      "use: linters/formatters, debugger"
    ],
    "intermediate": [
      "concurrency/async patterns, packages/modules.",
      "standard library mastery and i/o.",
      "project: implement a url shortener service in lua",
      "project: data processing pipeline using lua",
      "use: testing frameworks, profiling tools"
    ],
    "advanced": [
      "performance tuning, memory profiling, and packaging.",
      "ffi or interop with other languages.",
      "project: build a plugin system or compiler front-end in lua",
      "project: high-throughput server in lua",
      "use: tracing, benchmarking"
    ],
    "expert": [
      "design idiomatic libraries and contribute to the ecosystem.",
      "security best practices and supply chain hardening.",
      "project: open-source lua framework",
      "project: lua sdk for a public api",
      "use: static analysis, fuzzing"
    ],
    "careers": [
      "Game Developer",
      "Embedded Systems Engineer",
      "Scripting Engineer"
    ]
  },
  "dart": {
    "domain": "programming languages",
    "beginner": [
      "dart: syntax, idioms, build toolchain, and testing.",
      "write small cli tools and unit tests.",
      "project: dart cli to parse csv and output json",
      "project: simple http service in dart",
      "use: linters/formatters, debugger"
    ],
    "intermediate": [
      "concurrency/async patterns, packages/modules.",
      "standard library mastery and i/o.",
      "project: implement a url shortener service in dart",
      "project: data processing pipeline using dart",
      "use: testing frameworks, profiling tools"
    ],
    "advanced": [
      "performance tuning, memory profiling, and packaging.",
      "ffi or interop with other languages.",
      "project: build a plugin system or compiler front-end in dart",
      "project: high-throughput server in dart",
      "use: tracing, benchmarking"
    ],
    "expert": [
      "design idiomatic libraries and contribute to the ecosystem.",
      "security best practices and supply chain hardening.",
      "project: open-source dart framework",
      "project: dart sdk for a public api",
      "use: static analysis, fuzzing"
    ],
    "careers": [
      "Flutter Developer",
      "Mobile Application Developer"
    ]
  },
  "objective-c": {
    "domain": "programming languages",
    "beginner": [
      "objective-c: syntax, idioms, build toolchain, and testing.",
      "write small cli tools and unit tests.",
      "project: objective-c cli to parse csv and output json",
      "project: simple http service in objective-c",
      "use: linters/formatters, debugger"
    ],
    "intermediate": [
      "concurrency/async patterns, packages/modules.",
      "standard library mastery and i/o.",
      "project: implement a url shortener service in objective-c",
      "project: data processing pipeline using objective-c",
      "use: testing frameworks, profiling tools"
    ],
    "advanced": [
      "performance tuning, memory profiling, and packaging.",
      "ffi or interop with other languages.",
      "project: build a plugin system or compiler front-end in objective-c",
      "project: high-throughput server in objective-c",
      "use: tracing, benchmarking"
    ],
    "expert": [
      "design idiomatic libraries and contribute to the ecosystem.",
      "security best practices and supply chain hardening.",
      "project: open-source objective-c framework",
      "project: objective-c sdk for a public api",
      "use: static analysis, fuzzing"
    ],
    "careers": [
      "iOS Developer",
      "Mobile Application Engineer"
    ]
  },
  "assembly": {
    "domain": "programming languages",
    "beginner": [
      "assembly: syntax, idioms, build toolchain, and testing.",
      "write small cli tools and unit tests.",
      "project: assembly cli to parse csv and output json",
      "project: simple http service in assembly",
      "use: linters/formatters, debugger"
    ],
    "intermediate": [
      "concurrency/async patterns, packages/modules.",
      "standard library mastery and i/o.",
      "project: implement a url shortener service in assembly",
      "project: data processing pipeline using assembly",
      "use: testing frameworks, profiling tools"
    ],
    "advanced": [
      "performance tuning, memory profiling, and packaging.",
      "ffi or interop with other languages.",
      "project: build a plugin system or compiler front-end in assembly",
      "project: high-throughput server in assembly",
      "use: tracing, benchmarking"
    ],
    "expert": [
      "design idiomatic libraries and contribute to the ecosystem.",
      "security best practices and supply chain hardening.",
      "project: open-source assembly framework",
      "project: assembly sdk for a public api",
      "use: static analysis, fuzzing"
    ],
    "careers": [
      "Embedded Systems Engineer",
      "Systems Programmer",
      "Reverse Engineer"
    ]
  },
  "matlab": {
    "domain": "programming languages",
    "beginner": [
      "matlab: syntax, idioms, build toolchain, and testing.",
      "write small cli tools and unit tests.",
      "project: matlab cli to parse csv and output json",
      "project: simple http service in matlab",
      "use: linters/formatters, debugger"
    ],
    "intermediate": [
      "concurrency/async patterns, packages/modules.",
      "standard library mastery and i/o.",
      "project: implement a url shortener service in matlab",
      "project: data processing pipeline using matlab",
      "use: testing frameworks, profiling tools"
    ],
    "advanced": [
      "performance tuning, memory profiling, and packaging.",
      "ffi or interop with other languages.",
      "project: build a plugin system or compiler front-end in matlab",
      "project: high-throughput server in matlab",
      "use: tracing, benchmarking"
    ],
    "expert": [
      "design idiomatic libraries and contribute to the ecosystem.",
      "security best practices and supply chain hardening.",
      "project: open-source matlab framework",
      "project: matlab sdk for a public api",
      "use: static analysis, fuzzing"
    ],
    "careers": [
      "Data Scientist",
      "Research Scientist",
      "Control Systems Engineer"
    ]
  },
  "html": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use html.",
      "build a responsive html landing page with components, props/state (or reactivity), and client-side routing.",
      "project: html portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for html",
      "use: html router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on html.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "Web Designer"
    ]
  },
  "css": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use css.",
      "build a responsive css landing page with components, props/state (or reactivity), and client-side routing.",
      "project: css portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for css",
      "use: css router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on css.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "UI Designer"
    ]
  },
  "sass": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use sass.",
      "build a responsive sass landing page with components, props/state (or reactivity), and client-side routing.",
      "project: sass portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for sass",
      "use: sass router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on sass.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "UI Designer"
    ]
  },
  "less": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use less.",
      "build a responsive less landing page with components, props/state (or reactivity), and client-side routing.",
      "project: less portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for less",
      "use: less router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on less.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "UI Designer"
    ]
  },
  "react": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use react.",
      "build a responsive react landing page with components, props/state (or reactivity), and client-side routing.",
      "project: react portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for react",
      "use: react router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on react.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "Full-Stack Developer",
      "UI Engineer"
    ]
  },
  "angular": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use angular.",
      "build a responsive angular landing page with components, props/state (or reactivity), and client-side routing.",
      "project: angular portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for angular",
      "use: angular router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on angular.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "Full-Stack Developer",
      "UI Engineer"
    ]
  },
  "vue.js": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use vue.",
      "build a responsive vue landing page with components, props/state (or reactivity), and client-side routing.",
      "project: vue portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for vue",
      "use: vue router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on vue.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "Full-Stack Developer",
      "UI Engineer"
    ]
  },
  "svelte": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use svelte.",
      "build a responsive svelte landing page with components, props/state (or reactivity), and client-side routing.",
      "project: svelte portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for svelte",
      "use: svelte router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on svelte.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "Full-Stack Developer"
    ]
  },
  "next.js": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use next.js.",
      "build a responsive next.js landing page with components, props/state (or reactivity), and client-side routing.",
      "project: next.js portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for next.js",
      "use: next.js router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on next.js.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Full-Stack Developer",
      "Frontend Developer"
    ]
  },
  "nuxt.js": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use nuxt.js.",
      "build a responsive nuxt.js landing page with components, props/state (or reactivity), and client-side routing.",
      "project: nuxt.js portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for nuxt.js",
      "use: nuxt.js router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on nuxt.js.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Full-Stack Developer",
      "Frontend Developer"
    ]
  },
  "gatsby": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use gatsby.",
      "build a responsive gatsby landing page with components, props/state (or reactivity), and client-side routing.",
      "project: gatsby portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for gatsby",
      "use: gatsby router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on gatsby.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "Static Site Engineer"
    ]
  },
  "webpack": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use webpack.",
      "build a responsive webpack landing page with components, props/state (or reactivity), and client-side routing.",
      "project: webpack portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for webpack",
      "use: webpack router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on webpack.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Build Engineer",
      "DevOps Engineer"
    ]
  },
  "vite": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use vite.",
      "build a responsive vite landing page with components, props/state (or reactivity), and client-side routing.",
      "project: vite portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for vite",
      "use: vite router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on vite.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Build Engineer",
      "DevOps Engineer"
    ]
  },
  "tailwind css": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use tailwind css.",
      "build a responsive tailwind css landing page with components, props/state (or reactivity), and client-side routing.",
      "project: tailwind css portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for tailwind css",
      "use: tailwind css router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on tailwind css.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "UI Engineer",
      "Web Designer"
    ]
  },
  "bootstrap": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use bootstrap.",
      "build a responsive bootstrap landing page with components, props/state (or reactivity), and client-side routing.",
      "project: bootstrap portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for bootstrap",
      "use: bootstrap router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on bootstrap.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "UI Engineer",
      "Web Designer"
    ]
  },
  "alpine.js": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use alpine.js.",
      "build a responsive alpine.js landing page with components, props/state (or reactivity), and client-side routing.",
      "project: alpine.js portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for alpine.js",
      "use: alpine.js router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on alpine.js.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "UI Engineer"
    ]
  },
  "lit": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use lit.",
      "build a responsive lit landing page with components, props/state (or reactivity), and client-side routing.",
      "project: lit portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for lit",
      "use: lit router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on lit.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "Web Component Engineer"
    ]
  },
  "stencil": {
    "domain": "frontend",
    "beginner": [
      "learn html5 semantics, modern css (flexbox/grid), and es6+ javascript fundamentals required to use stencil.",
      "build a responsive stencil landing page with components, props/state (or reactivity), and client-side routing.",
      "project: stencil portfolio site with dark mode and contact form",
      "project: style system: utility-first css (tailwind) or css modules for stencil",
      "use: stencil router, fetch/axios",
      "use: vite/next.js/nuxt (as applicable)"
    ],
    "intermediate": [
      "state management with context/redux/pinia/zustand depending on stencil.",
      "form validation and accessibility (wai-aria).",
      "authentication flows (jwt/oauth) and protected routes.",
      "project: dashboard with charts and filters consuming a public api",
      "project: blog/cms frontend with markdown editor and image uploads",
      "use: testing with jest/vitest + react testing library/cypress/playwright",
      "use: internationalization (i18n) and lazy loading"
    ],
    "advanced": [
      "server-side rendering (ssr) and static site generation (ssg) for seo.",
      "performance: code splitting, hydration, image optimization, lighthouse > 95.",
      "robust forms and tables with virtualization.",
      "project: e-commerce frontend: product listing, cart, checkout, payments",
      "project: pwa: offline caching, push notifications, add-to-home-screen",
      "use: graphql (apollo/urql) or rest with swr/rtk query",
      "use: design systems (storybook) and component libraries"
    ],
    "expert": [
      "architect micro-frontends or monorepos (turborepo, nx).",
      "optimize web vitals, avoid hydration waterfalls, measure with webpagetest.",
      "contribute to oss for the framework or build a reusable component library.",
      "project: design system library published to npm",
      "project: complex data grid or canvas-based editor",
      "use: advanced bundling with rollup/esbuild, bundle analyzer"
    ],
    "careers": [
      "Frontend Developer",
      "Web Component Engineer"
    ]
  },
  "node.js": {
    "domain": "backend & web frameworks",
    "beginner": [
      "build rest endpoints with validation, persistence, and pagination.",
      "authentication and authorization (jwt/oauth).",
      "project: task tracker api with users and roles",
      "project: file upload service with s3-compatible storage",
      "use: sql + orm, docker-compose",
      "use: swagger/openapi"
    ],
    "intermediate": [
      "background workers and scheduling.",
      "caching and rate limiting.",
      "project: e-commerce api + admin panel",
      "project: graphql gateway over multiple services",
      "use: redis/memcached, rabbitmq/kafka"
    ],
    "advanced": [
      "event-driven architecture and cqrs.",
      "observability and performance profiling.",
      "project: payment service with webhooks and retries",
      "project: real-time pub/sub notifications",
      "use: kafka, opentelemetry, grpc"
    ],
    "expert": [
      "multi-tenant, multi-region, and fault-tolerant design.",
      "security hardening and compliance (owasp asvs).",
      "project: design a scalable order-management system",
      "project: blueprint: platform starter with plugin architecture",
      "use: service mesh, vault, opa"
    ],
    "careers": [
      "Backend Developer",
      "Full-Stack Developer"
    ]
  },
  "express.js": {
    "domain": "backend & web frameworks",
    "beginner": [
      "http basics, routing, middleware, request/response in express.",
      "build crud rest endpoints with validation and persistence (javascript/typescript stack).",
      "project: notes api with pagination and filtering in express",
      "project: auth: jwt/oauth2, refresh tokens, password reset",
      "use: sql database with orm (sqlalchemy/gorm/typeorm/ef/hibernate/eloquent)",
      "use: docker-compose for local dev"
    ],
    "intermediate": [
      "background jobs and scheduled tasks.",
      "file uploads, static assets, and cdn integration.",
      "project: e-commerce api: products, carts, orders, payments (stripe)",
      "project: graphql api with resolvers and dataloaders",
      "use: message queue (rabbitmq/sqs/kafka), redis cache",
      "use: openapi/swagger, postman collections"
    ],
    "advanced": [
      "rate limiting, api keys, multi-tenancy, rbac/abac.",
      "observability: structured logging, tracing, metrics.",
      "project: microservice with saga/outbox pattern across services",
      "project: real-time websocket service (chat/notifications)",
      "use: grpc, protobuf/avro, opentelemetry, grafana/prometheus"
    ],
    "expert": [
      "design for reliability: idempotency, retries, backpressure, circuit breakers.",
      "zero-downtime deploys, blue/green and canary releases.",
      "project: design a high-throughput order service with exactly-once semantics",
      "project: multi-region active-active api with conflict resolution",
      "use: service mesh (istio/linkerd), api gateway, hashicorp vault"
    ],
    "careers": [
      "Backend Developer",
      "API Engineer",
      "Full-Stack Developer"
    ]
  },
  "django": {
    "domain": "backend & web frameworks",
    "beginner": [
      "django project structure, mtv pattern, templates, orm queries.",
      "user auth, forms, admin customization.",
      "project: blog with tags, search, and comments",
      "project: rest api with drf (pagination, filtering, throttling)",
      "use: django orm, drf, django-allauth",
      "use: sqlite/postgresql"
    ],
    "intermediate": [
      "asynchronous views (asgi), channels for websockets.",
      "security: csrf, xss, clickjacking protection, settings management.",
      "project: e-commerce with carts, checkout, stripe/paypal",
      "project: background tasks with celery + redis",
      "use: caching with redis, drf jwt/oauth, celery/flower"
    ],
    "advanced": [
      "multi-tenant architecture, advanced query optimization, select_related/prefetch_related.",
      "scalable deployments with gunicorn/uvicorn + nginx, containerization.",
      "project: large-scale api with rate limiting and observability",
      "project: graphql api with strawberry/graphene",
      "use: postgresql + pgbouncer, opentelemetry, sentry"
    ],
    "expert": [
      "domain-driven design with django apps, bounded contexts.",
      "migrate monolith → services, event-driven patterns.",
      "project: service decomposition using celery/kafka events",
      "project: building a saas starter with billing, tenancy, audits",
      "use: kafka, outbox pattern, drf filters at scale"
    ],
    "careers": [
      "Backend Developer",
      "Full-Stack Developer",
      "Software Engineer"
    ]
  },
  "flask": {
    "domain": "backend & web frameworks",
    "beginner": [
      "http basics, routing, middleware, request/response in flask.",
      "build crud rest endpoints with validation and persistence (python stack).",
      "project: notes api with pagination and filtering in flask",
      "project: auth: jwt/oauth2, refresh tokens, password reset",
      "use: sql database with orm (sqlalchemy/gorm/typeorm/ef/hibernate/eloquent)",
      "use: docker-compose for local dev"
    ],
    "intermediate": [
      "background jobs and scheduled tasks.",
      "file uploads, static assets, and cdn integration.",
      "project: e-commerce api: products, carts, orders, payments (stripe)",
      "project: graphql api with resolvers and dataloaders",
      "use: message queue (rabbitmq/sqs/kafka), redis cache",
      "use: openapi/swagger, postman collections"
    ],
    "advanced": [
      "rate limiting, api keys, multi-tenancy, rbac/abac.",
      "observability: structured logging, tracing, metrics.",
      "project: microservice with saga/outbox pattern across services",
      "project: real-time websocket service (chat/notifications)",
      "use: grpc, protobuf/avro, opentelemetry, grafana/prometheus"
    ],
    "expert": [
      "design for reliability: idempotency, retries, backpressure, circuit breakers.",
      "zero-downtime deploys, blue/green and canary releases.",
      "project: design a high-throughput order service with exactly-once semantics",
      "project: multi-region active-active api with conflict resolution",
      "use: service mesh (istio/linkerd), api gateway, hashicorp vault"
    ],
    "careers": [
      "Backend Developer",
      "API Engineer",
      "Full-Stack Developer"
    ]
  },
  "fastapi": {
    "domain": "backend & web frameworks",
    "beginner": [
      "http basics, routing, middleware, request/response in fastapi.",
      "build crud rest endpoints with validation and persistence (python stack).",
      "project: notes api with pagination and filtering in fastapi",
      "project: auth: jwt/oauth2, refresh tokens, password reset",
      "use: sql database with orm (sqlalchemy/gorm/typeorm/ef/hibernate/eloquent)",
      "use: docker-compose for local dev"
    ],
    "intermediate": [
      "background jobs and scheduled tasks.",
      "file uploads, static assets, and cdn integration.",
      "project: e-commerce api: products, carts, orders, payments (stripe)",
      "project: graphql api with resolvers and dataloaders",
      "use: message queue (rabbitmq/sqs/kafka), redis cache",
      "use: openapi/swagger, postman collections"
    ],
    "advanced": [
      "rate limiting, api keys, multi-tenancy, rbac/abac.",
      "observability: structured logging, tracing, metrics.",
      "project: microservice with saga/outbox pattern across services",
      "project: real-time websocket service (chat/notifications)",
      "use: grpc, protobuf/avro, opentelemetry, grafana/prometheus"
    ],
    "expert": [
      "design for reliability: idempotency, retries, backpressure, circuit breakers.",
      "zero-downtime deploys, blue/green and canary releases.",
      "project: design a high-throughput order service with exactly-once semantics",
      "project: multi-region active-active api with conflict resolution",
      "use: service mesh (istio/linkerd), api gateway, hashicorp vault"
    ],
    "careers": [
      "Backend Developer",
      "API Engineer"
    ]
  },
  "spring boot": {
    "domain": "backend & web frameworks",
    "beginner": [
      "http basics, routing, middleware, request/response in spring boot.",
      "build crud rest endpoints with validation and persistence (java stack).",
      "project: notes api with pagination and filtering in spring boot",
      "project: auth: jwt/oauth2, refresh tokens, password reset",
      "use: sql database with orm (sqlalchemy/gorm/typeorm/ef/hibernate/eloquent)",
      "use: docker-compose for local dev"
    ],
    "intermediate": [
      "background jobs and scheduled tasks.",
      "file uploads, static assets, and cdn integration.",
      "project: e-commerce api: products, carts, orders, payments (stripe)",
      "project: graphql api with resolvers and dataloaders",
      "use: message queue (rabbitmq/sqs/kafka), redis cache",
      "use: openapi/swagger, postman collections"
    ],
    "advanced": [
      "rate limiting, api keys, multi-tenancy, rbac/abac.",
      "observability: structured logging, tracing, metrics.",
      "project: microservice with saga/outbox pattern across services",
      "project: real-time websocket service (chat/notifications)",
      "use: grpc, protobuf/avro, opentelemetry, grafana/prometheus"
    ],
    "expert": [
      "design for reliability: idempotency, retries, backpressure, circuit breakers.",
      "zero-downtime deploys, blue/green and canary releases.",
      "project: design a high-throughput order service with exactly-once semantics",
      "project: multi-region active-active api with conflict resolution",
      "use: service mesh (istio/linkerd), api gateway, hashicorp vault"
    ],
    "careers": [
      "Backend Developer",
      "Enterprise Software Engineer"
    ]
  },
  "asp.net": {
    "domain": "backend & web frameworks",
    "beginner": [
      "http basics, routing, middleware, request/response in asp.net core.",
      "build crud rest endpoints with validation and persistence (c# stack).",
      "project: notes api with pagination and filtering in asp.net core",
      "project: auth: jwt/oauth2, refresh tokens, password reset",
      "use: sql database with orm (sqlalchemy/gorm/typeorm/ef/hibernate/eloquent)",
      "use: docker-compose for local dev"
    ],
    "intermediate": [
      "background jobs and scheduled tasks.",
      "file uploads, static assets, and cdn integration.",
      "project: e-commerce api: products, carts, orders, payments (stripe)",
      "project: graphql api with resolvers and dataloaders",
      "use: message queue (rabbitmq/sqs/kafka), redis cache",
      "use: openapi/swagger, postman collections"
    ],
    "advanced": [
      "rate limiting, api keys, multi-tenancy, rbac/abac.",
      "observability: structured logging, tracing, metrics.",
      "project: microservice with saga/outbox pattern across services",
      "project: real-time websocket service (chat/notifications)",
      "use: grpc, protobuf/avro, opentelemetry, grafana/prometheus"
    ],
    "expert": [
      "design for reliability: idempotency, retries, backpressure, circuit breakers.",
      "zero-downtime deploys, blue/green and canary releases.",
      "project: design a high-throughput order service with exactly-once semantics",
      "project: multi-region active-active api with conflict resolution",
      "use: service mesh (istio/linkerd), api gateway, hashicorp vault"
    ],
    "careers": [
      "Backend Developer",
      "Enterprise Software Engineer"
    ]
  },
  "laravel": {
    "domain": "backend & web frameworks",
    "beginner": [
      "http basics, routing, middleware, request/response in laravel.",
      "build crud rest endpoints with validation and persistence (php stack).",
      "project: notes api with pagination and filtering in laravel",
      "project: auth: jwt/oauth2, refresh tokens, password reset",
      "use: sql database with orm (sqlalchemy/gorm/typeorm/ef/hibernate/eloquent)",
      "use: docker-compose for local dev"
    ],
    "intermediate": [
      "background jobs and scheduled tasks.",
      "file uploads, static assets, and cdn integration.",
      "project: e-commerce api: products, carts, orders, payments (stripe)",
      "project: graphql api with resolvers and dataloaders",
      "use: message queue (rabbitmq/sqs/kafka), redis cache",
      "use: openapi/swagger, postman collections"
    ],
    "advanced": [
      "rate limiting, api keys, multi-tenancy, rbac/abac.",
      "observability: structured logging, tracing, metrics.",
      "project: microservice with saga/outbox pattern across services",
      "project: real-time websocket service (chat/notifications)",
      "use: grpc, protobuf/avro, opentelemetry, grafana/prometheus"
    ],
    "expert": [
      "design for reliability: idempotency, retries, backpressure, circuit breakers.",
      "zero-downtime deploys, blue/green and canary releases.",
      "project: design a high-throughput order service with exactly-once semantics",
      "project: multi-region active-active api with conflict resolution",
      "use: service mesh (istio/linkerd), api gateway, hashicorp vault"
    ]
  },
  "ruby on rails": {
    "domain": "backend & web frameworks",
    "beginner": [
      "http basics, routing, middleware, request/response in rails.",
      "build crud rest endpoints with validation and persistence (ruby stack).",
      "project: notes api with pagination and filtering in rails",
      "project: auth: jwt/oauth2, refresh tokens, password reset",
      "use: sql database with orm (sqlalchemy/gorm/typeorm/ef/hibernate/eloquent)",
      "use: docker-compose for local dev"
    ],
    "intermediate": [
      "background jobs and scheduled tasks.",
      "file uploads, static assets, and cdn integration.",
      "project: e-commerce api: products, carts, orders, payments (stripe)",
      "project: graphql api with resolvers and dataloaders",
      "use: message queue (rabbitmq/sqs/kafka), redis cache",
      "use: openapi/swagger, postman collections"
    ],
    "advanced": [
      "rate limiting, api keys, multi-tenancy, rbac/abac.",
      "observability: structured logging, tracing, metrics.",
      "project: microservice with saga/outbox pattern across services",
      "project: real-time websocket service (chat/notifications)",
      "use: grpc, protobuf/avro, opentelemetry, grafana/prometheus"
    ],
    "expert": [
      "design for reliability: idempotency, retries, backpressure, circuit breakers.",
      "zero-downtime deploys, blue/green and canary releases.",
      "project: design a high-throughput order service with exactly-once semantics",
      "project: multi-region active-active api with conflict resolution",
      "use: service mesh (istio/linkerd), api gateway, hashicorp vault"
    ]
  },
  "koa.js": {
    "domain": "backend & web frameworks",
    "beginner": [
      "build rest endpoints with validation, persistence, and pagination.",
      "authentication and authorization (jwt/oauth).",
      "project: task tracker api with users and roles",
      "project: file upload service with s3-compatible storage",
      "use: sql + orm, docker-compose",
      "use: swagger/openapi"
    ],
    "intermediate": [
      "background workers and scheduling.",
      "caching and rate limiting.",
      "project: e-commerce api + admin panel",
      "project: graphql gateway over multiple services",
      "use: redis/memcached, rabbitmq/kafka"
    ],
    "advanced": [
      "event-driven architecture and cqrs.",
      "observability and performance profiling.",
      "project: payment service with webhooks and retries",
      "project: real-time pub/sub notifications",
      "use: kafka, opentelemetry, grpc"
    ],
    "expert": [
      "multi-tenant, multi-region, and fault-tolerant design.",
      "security hardening and compliance (owasp asvs).",
      "project: design a scalable order-management system",
      "project: blueprint: platform starter with plugin architecture",
      "use: service mesh, vault, opa"
    ]
  },
  "gin": {
    "domain": "backend & web frameworks",
    "beginner": [
      "http basics, routing, middleware, request/response in gin.",
      "build crud rest endpoints with validation and persistence (go stack).",
      "project: notes api with pagination and filtering in gin",
      "project: auth: jwt/oauth2, refresh tokens, password reset",
      "use: sql database with orm (sqlalchemy/gorm/typeorm/ef/hibernate/eloquent)",
      "use: docker-compose for local dev"
    ],
    "intermediate": [
      "background jobs and scheduled tasks.",
      "file uploads, static assets, and cdn integration.",
      "project: e-commerce api: products, carts, orders, payments (stripe)",
      "project: graphql api with resolvers and dataloaders",
      "use: message queue (rabbitmq/sqs/kafka), redis cache",
      "use: openapi/swagger, postman collections"
    ],
    "advanced": [
      "rate limiting, api keys, multi-tenancy, rbac/abac.",
      "observability: structured logging, tracing, metrics.",
      "project: microservice with saga/outbox pattern across services",
      "project: real-time websocket service (chat/notifications)",
      "use: grpc, protobuf/avro, opentelemetry, grafana/prometheus"
    ],
    "expert": [
      "design for reliability: idempotency, retries, backpressure, circuit breakers.",
      "zero-downtime deploys, blue/green and canary releases.",
      "project: design a high-throughput order service with exactly-once semantics",
      "project: multi-region active-active api with conflict resolution",
      "use: service mesh (istio/linkerd), api gateway, hashicorp vault"
    ]
  },
  "fiber": {
    "domain": "backend & web frameworks",
    "beginner": [
      "build rest endpoints with validation, persistence, and pagination.",
      "authentication and authorization (jwt/oauth).",
      "project: task tracker api with users and roles",
      "project: file upload service with s3-compatible storage",
      "use: sql + orm, docker-compose",
      "use: swagger/openapi"
    ],
    "intermediate": [
      "background workers and scheduling.",
      "caching and rate limiting.",
      "project: e-commerce api + admin panel",
      "project: graphql gateway over multiple services",
      "use: redis/memcached, rabbitmq/kafka"
    ],
    "advanced": [
      "event-driven architecture and cqrs.",
      "observability and performance profiling.",
      "project: payment service with webhooks and retries",
      "project: real-time pub/sub notifications",
      "use: kafka, opentelemetry, grpc"
    ],
    "expert": [
      "multi-tenant, multi-region, and fault-tolerant design.",
      "security hardening and compliance (owasp asvs).",
      "project: design a scalable order-management system",
      "project: blueprint: platform starter with plugin architecture",
      "use: service mesh, vault, opa"
    ]
  },
  "play framework": {
    "domain": "backend & web frameworks",
    "beginner": [
      "build rest endpoints with validation, persistence, and pagination.",
      "authentication and authorization (jwt/oauth).",
      "project: task tracker api with users and roles",
      "project: file upload service with s3-compatible storage",
      "use: sql + orm, docker-compose",
      "use: swagger/openapi"
    ],
    "intermediate": [
      "background workers and scheduling.",
      "caching and rate limiting.",
      "project: e-commerce api + admin panel",
      "project: graphql gateway over multiple services",
      "use: redis/memcached, rabbitmq/kafka"
    ],
    "advanced": [
      "event-driven architecture and cqrs.",
      "observability and performance profiling.",
      "project: payment service with webhooks and retries",
      "project: real-time pub/sub notifications",
      "use: kafka, opentelemetry, grpc"
    ],
    "expert": [
      "multi-tenant, multi-region, and fault-tolerant design.",
      "security hardening and compliance (owasp asvs).",
      "project: design a scalable order-management system",
      "project: blueprint: platform starter with plugin architecture",
      "use: service mesh, vault, opa"
    ]
  },
  "symfony": {
    "domain": "backend & web frameworks",
    "beginner": [
      "build rest endpoints with validation, persistence, and pagination.",
      "authentication and authorization (jwt/oauth).",
      "project: task tracker api with users and roles",
      "project: file upload service with s3-compatible storage",
      "use: sql + orm, docker-compose",
      "use: swagger/openapi"
    ],
    "intermediate": [
      "background workers and scheduling.",
      "caching and rate limiting.",
      "project: e-commerce api + admin panel",
      "project: graphql gateway over multiple services",
      "use: redis/memcached, rabbitmq/kafka"
    ],
    "advanced": [
      "event-driven architecture and cqrs.",
      "observability and performance profiling.",
      "project: payment service with webhooks and retries",
      "project: real-time pub/sub notifications",
      "use: kafka, opentelemetry, grpc"
    ],
    "expert": [
      "multi-tenant, multi-region, and fault-tolerant design.",
      "security hardening and compliance (owasp asvs).",
      "project: design a scalable order-management system",
      "project: blueprint: platform starter with plugin architecture",
      "use: service mesh, vault, opa"
    ]
  },
  "micronaut": {
    "domain": "backend & web frameworks",
    "beginner": [
      "build rest endpoints with validation, persistence, and pagination.",
      "authentication and authorization (jwt/oauth).",
      "project: task tracker api with users and roles",
      "project: file upload service with s3-compatible storage",
      "use: sql + orm, docker-compose",
      "use: swagger/openapi"
    ],
    "intermediate": [
      "background workers and scheduling.",
      "caching and rate limiting.",
      "project: e-commerce api + admin panel",
      "project: graphql gateway over multiple services",
      "use: redis/memcached, rabbitmq/kafka"
    ],
    "advanced": [
      "event-driven architecture and cqrs.",
      "observability and performance profiling.",
      "project: payment service with webhooks and retries",
      "project: real-time pub/sub notifications",
      "use: kafka, opentelemetry, grpc"
    ],
    "expert": [
      "multi-tenant, multi-region, and fault-tolerant design.",
      "security hardening and compliance (owasp asvs).",
      "project: design a scalable order-management system",
      "project: blueprint: platform starter with plugin architecture",
      "use: service mesh, vault, opa"
    ]
  },
  "phoenix": {
    "domain": "backend & web frameworks",
    "beginner": [
      "build rest endpoints with validation, persistence, and pagination.",
      "authentication and authorization (jwt/oauth).",
      "project: task tracker api with users and roles",
      "project: file upload service with s3-compatible storage",
      "use: sql + orm, docker-compose",
      "use: swagger/openapi"
    ],
    "intermediate": [
      "background workers and scheduling.",
      "caching and rate limiting.",
      "project: e-commerce api + admin panel",
      "project: graphql gateway over multiple services",
      "use: redis/memcached, rabbitmq/kafka"
    ],
    "advanced": [
      "event-driven architecture and cqrs.",
      "observability and performance profiling.",
      "project: payment service with webhooks and retries",
      "project: real-time pub/sub notifications",
      "use: kafka, opentelemetry, grpc"
    ],
    "expert": [
      "multi-tenant, multi-region, and fault-tolerant design.",
      "security hardening and compliance (owasp asvs).",
      "project: design a scalable order-management system",
      "project: blueprint: platform starter with plugin architecture",
      "use: service mesh, vault, opa"
    ]
  },
  "sql": {
    "domain": "databases",
    "beginner": [
      "model data and write crud queries; understand transactions and isolation.",
      "indexing strategies and query plans.",
      "project: design a normalized schema for a small app",
      "project: write complex joins and window functions",
      "use: explain/analyze tools"
    ],
    "intermediate": [
      "backups, replication, and migrations.",
      "caching layers and read/write splitting.",
      "project: reporting replica for analytics",
      "project: partitioning/time-series optimization",
      "use: change data capture (cdc)"
    ],
    "advanced": [
      "sharding, ha, and disaster recovery.",
      "observability and performance benchmarking.",
      "project: ha cluster with failover",
      "project: benchmark read/write workloads",
      "use: tpc benchmarks, p99 latency tracking"
    ],
    "expert": [
      "multi-region topologies and governance.",
      "security hardening and auditing.",
      "project: global database design for saas",
      "project: audit logging and compliance toolkit",
      "use: kms/envelope encryption"
    ]
  },
  "mysql": {
    "domain": "databases",
    "beginner": [
      "relational modeling, sql basics, storage engines (innodb).",
      "indexes and transactions.",
      "project: schema for shop/blog with constraints",
      "project: query optimization with explain",
      "use: mysqldump, explain, slow query log"
    ],
    "intermediate": [
      "replication (async/semisync), backup strategies.",
      "partitioning and optimizer hints.",
      "project: read replicas for reporting",
      "project: sharding poc",
      "use: percona toolkit, proxysql"
    ],
    "advanced": [
      "performance tuning: buffer pool, redo logs, lock analysis.",
      "security: users/roles, tls, auditing.",
      "project: ha with mha/galera",
      "project: online schema changes with gh-ost",
      "use: pt-query-digest, gh-ost/pt-online-schema-change"
    ],
    "expert": [
      "multi-region, multi-master strategies.",
      "write udfs or stored procedures for performance.",
      "project: global database topology design",
      "project: custom udfs for analytics",
      "use: vitess, tungsten replicator"
    ]
  },
  "postgresql": {
    "domain": "databases",
    "beginner": [
      "relational modeling, normalization, basic sql (ddl/dml/dql).",
      "indexes, constraints, and transactions.",
      "project: design erd for blog/e-commerce",
      "project: implement triggers and views",
      "use: psql, explain/analyze"
    ],
    "intermediate": [
      "advanced indexing (gin/brin), partitions, materialized views.",
      "backup/restore, wal archiving.",
      "project: full-text search with tsvector/tsquery",
      "project: time-series partitioning and retention",
      "use: logical replication, pg_partman"
    ],
    "advanced": [
      "performance tuning: autovacuum, query plans, hotspots.",
      "high availability and failover.",
      "project: patroni cluster with synchronous standby",
      "project: sharding strategies comparison",
      "use: patroni, pgbouncer/pgpool, timescaledb"
    ],
    "expert": [
      "multi-tenant designs, rls, and auditing.",
      "write extensions or procedural code.",
      "project: rls-based saas database",
      "project: custom extension with pl/pgsql/rust",
      "use: pgcrypto, wal2json, pgrouting"
    ]
  },
  "sqlite": {
    "domain": "databases",
    "beginner": [
      "model data and write crud queries; understand transactions and isolation.",
      "indexing strategies and query plans.",
      "project: design a normalized schema for a small app",
      "project: write complex joins and window functions",
      "use: explain/analyze tools"
    ],
    "intermediate": [
      "backups, replication, and migrations.",
      "caching layers and read/write splitting.",
      "project: reporting replica for analytics",
      "project: partitioning/time-series optimization",
      "use: change data capture (cdc)"
    ],
    "advanced": [
      "sharding, ha, and disaster recovery.",
      "observability and performance benchmarking.",
      "project: ha cluster with failover",
      "project: benchmark read/write workloads",
      "use: tpc benchmarks, p99 latency tracking"
    ],
    "expert": [
      "multi-region topologies and governance.",
      "security hardening and auditing.",
      "project: global database design for saas",
      "project: audit logging and compliance toolkit",
      "use: kms/envelope encryption"
    ]
  },
  "oracle": {
    "domain": "databases",
    "beginner": [
      "model data and write crud queries; understand transactions and isolation.",
      "indexing strategies and query plans.",
      "project: design a normalized schema for a small app",
      "project: write complex joins and window functions",
      "use: explain/analyze tools"
    ],
    "intermediate": [
      "backups, replication, and migrations.",
      "caching layers and read/write splitting.",
      "project: reporting replica for analytics",
      "project: partitioning/time-series optimization",
      "use: change data capture (cdc)"
    ],
    "advanced": [
      "sharding, ha, and disaster recovery.",
      "observability and performance benchmarking.",
      "project: ha cluster with failover",
      "project: benchmark read/write workloads",
      "use: tpc benchmarks, p99 latency tracking"
    ],
    "expert": [
      "multi-region topologies and governance.",
      "security hardening and auditing.",
      "project: global database design for saas",
      "project: audit logging and compliance toolkit",
      "use: kms/envelope encryption"
    ]
  },
  "mongodb": {
    "domain": "databases",
    "beginner": [
      "document modeling and schema design (embedding vs referencing).",
      "crud operations and indexes.",
      "project: catalog + reviews with compound indexes",
      "project: geo queries demo",
      "use: mongoose/pymongo, aggregation pipeline"
    ],
    "intermediate": [
      "performance: index cardinality, ttl, partial indexes.",
      "replica sets and backups.",
      "project: shard a collection and route queries",
      "project: change streams consumer",
      "use: sharding, wiredtiger, compass"
    ],
    "advanced": [
      "multi-document transactions and acid trade-offs.",
      "schema evolution and versioning.",
      "project: event-sourced collection design",
      "project: hybrid search with atlas search",
      "use: atlas search, realm"
    ],
    "expert": [
      "global clusters, workload isolation, and cost control.",
      "security: field-level encryption and auditing.",
      "project: multi-region cluster with zoned sharding",
      "project: field-level encryption demo",
      "use: csfle, ops manager/atlas"
    ]
  },
  "redis": {
    "domain": "databases",
    "beginner": [
      "key types (strings, sets, hashes, zsets), ttls, eviction.",
      "use redis as a cache for api responses.",
      "project: rate limiter with sorted sets",
      "project: leaderboard system",
      "use: redis-py/ioredis, redis-cli"
    ],
    "intermediate": [
      "pub/sub, streams, consumer groups.",
      "persistence (aof/rdb) and replication.",
      "project: event bus with streams",
      "project: delayed jobs with sorted sets",
      "use: redis streams, sentinel"
    ],
    "advanced": [
      "cluster mode, hash slots, topology management.",
      "search and vector modules.",
      "project: redis cluster for session storage",
      "project: vector similarity search demo",
      "use: redis cluster, redisearch/redisvl"
    ],
    "expert": [
      "operating redis at scale: memory, latency, persistence trade-offs.",
      "multi-tenant and multi-dc strategies.",
      "project: cost-optimized cache with lfu/lru tuning",
      "project: geo-distributed cache with active-passive failover",
      "use: latency monitor, redis-benchmark"
    ]
  },
  "cassandra": {
    "domain": "databases",
    "beginner": [
      "model data and write crud queries; understand transactions and isolation.",
      "indexing strategies and query plans.",
      "project: design a normalized schema for a small app",
      "project: write complex joins and window functions",
      "use: explain/analyze tools"
    ],
    "intermediate": [
      "backups, replication, and migrations.",
      "caching layers and read/write splitting.",
      "project: reporting replica for analytics",
      "project: partitioning/time-series optimization",
      "use: change data capture (cdc)"
    ],
    "advanced": [
      "sharding, ha, and disaster recovery.",
      "observability and performance benchmarking.",
      "project: ha cluster with failover",
      "project: benchmark read/write workloads",
      "use: tpc benchmarks, p99 latency tracking"
    ],
    "expert": [
      "multi-region topologies and governance.",
      "security hardening and auditing.",
      "project: global database design for saas",
      "project: audit logging and compliance toolkit",
      "use: kms/envelope encryption"
    ]
  },
  "neo4j": {
    "domain": "databases",
    "beginner": [
      "model data and write crud queries; understand transactions and isolation.",
      "indexing strategies and query plans.",
      "project: design a normalized schema for a small app",
      "project: write complex joins and window functions",
      "use: explain/analyze tools"
    ],
    "intermediate": [
      "backups, replication, and migrations.",
      "caching layers and read/write splitting.",
      "project: reporting replica for analytics",
      "project: partitioning/time-series optimization",
      "use: change data capture (cdc)"
    ],
    "advanced": [
      "sharding, ha, and disaster recovery.",
      "observability and performance benchmarking.",
      "project: ha cluster with failover",
      "project: benchmark read/write workloads",
      "use: tpc benchmarks, p99 latency tracking"
    ],
    "expert": [
      "multi-region topologies and governance.",
      "security hardening and auditing.",
      "project: global database design for saas",
      "project: audit logging and compliance toolkit",
      "use: kms/envelope encryption"
    ]
  },
  "mariadb": {
    "domain": "databases",
    "beginner": [
      "relational modeling, sql basics, storage engines (innodb).",
      "indexes and transactions.",
      "project: schema for shop/blog with constraints",
      "project: query optimization with explain",
      "use: mysqldump, explain, slow query log"
    ],
    "intermediate": [
      "replication (async/semisync), backup strategies.",
      "partitioning and optimizer hints.",
      "project: read replicas for reporting",
      "project: sharding poc",
      "use: percona toolkit, proxysql"
    ],
    "advanced": [
      "performance tuning: buffer pool, redo logs, lock analysis.",
      "security: users/roles, tls, auditing.",
      "project: ha with mha/galera",
      "project: online schema changes with gh-ost",
      "use: pt-query-digest, gh-ost/pt-online-schema-change"
    ],
    "expert": [
      "multi-region, multi-master strategies.",
      "write udfs or stored procedures for performance.",
      "project: global database topology design",
      "project: custom udfs for analytics",
      "use: vitess, tungsten replicator"
    ]
  },
  "firebase": {
    "domain": "databases",
    "beginner": [
      "model data and write crud queries; understand transactions and isolation.",
      "indexing strategies and query plans.",
      "project: design a normalized schema for a small app",
      "project: write complex joins and window functions",
      "use: explain/analyze tools"
    ],
    "intermediate": [
      "backups, replication, and migrations.",
      "caching layers and read/write splitting.",
      "project: reporting replica for analytics",
      "project: partitioning/time-series optimization",
      "use: change data capture (cdc)"
    ],
    "advanced": [
      "sharding, ha, and disaster recovery.",
      "observability and performance benchmarking.",
      "project: ha cluster with failover",
      "project: benchmark read/write workloads",
      "use: tpc benchmarks, p99 latency tracking"
    ],
    "expert": [
      "multi-region topologies and governance.",
      "security hardening and auditing.",
      "project: global database design for saas",
      "project: audit logging and compliance toolkit",
      "use: kms/envelope encryption"
    ]
  },
  "elasticsearch": {
    "domain": "databases",
    "beginner": [
      "index/mapping, analyzers, and query dsl basics.",
      "ingest pipelines and bulk indexing.",
      "project: full-text search for blog/products",
      "project: autocomplete with edge n-grams",
      "use: kibana/opensearch dashboards, beats/logstash"
    ],
    "intermediate": [
      "relevance tuning, synonyms, and rescoring.",
      "aggregations for analytics.",
      "project: e-commerce search with facets and synonyms",
      "project: a/b test ranking models",
      "use: rank features, learning to rank"
    ],
    "advanced": [
      "scaling clusters, ilm, rollovers, and snapshots.",
      "vector search and hybrid retrieval.",
      "project: observability stack (elk/osl) for services",
      "project: semantic search with dense vectors",
      "use: opentelemetry exporters, k-nn plugin"
    ],
    "expert": [
      "multi-cluster federation and cross-cluster search.",
      "security, tenancy, and compliance.",
      "project: search platform for multi-tenant saas",
      "project: custom plugin for analyzers",
      "use: shield/security, ccr"
    ]
  },
  "couchdb": {
    "domain": "databases",
    "beginner": [
      "model data and write crud queries; understand transactions and isolation.",
      "indexing strategies and query plans.",
      "project: design a normalized schema for a small app",
      "project: write complex joins and window functions",
      "use: explain/analyze tools"
    ],
    "intermediate": [
      "backups, replication, and migrations.",
      "caching layers and read/write splitting.",
      "project: reporting replica for analytics",
      "project: partitioning/time-series optimization",
      "use: change data capture (cdc)"
    ],
    "advanced": [
      "sharding, ha, and disaster recovery.",
      "observability and performance benchmarking.",
      "project: ha cluster with failover",
      "project: benchmark read/write workloads",
      "use: tpc benchmarks, p99 latency tracking"
    ],
    "expert": [
      "multi-region topologies and governance.",
      "security hardening and auditing.",
      "project: global database design for saas",
      "project: audit logging and compliance toolkit",
      "use: kms/envelope encryption"
    ]
  },
  "dynamodb": {
    "domain": "databases",
    "beginner": [
      "model data and write crud queries; understand transactions and isolation.",
      "indexing strategies and query plans.",
      "project: design a normalized schema for a small app",
      "project: write complex joins and window functions",
      "use: explain/analyze tools"
    ],
    "intermediate": [
      "backups, replication, and migrations.",
      "caching layers and read/write splitting.",
      "project: reporting replica for analytics",
      "project: partitioning/time-series optimization",
      "use: change data capture (cdc)"
    ],
    "advanced": [
      "sharding, ha, and disaster recovery.",
      "observability and performance benchmarking.",
      "project: ha cluster with failover",
      "project: benchmark read/write workloads",
      "use: tpc benchmarks, p99 latency tracking"
    ],
    "expert": [
      "multi-region topologies and governance.",
      "security hardening and auditing.",
      "project: global database design for saas",
      "project: audit logging and compliance toolkit",
      "use: kms/envelope encryption"
    ]
  },
  "influxdb": {
    "domain": "databases",
    "beginner": [
      "model data and write crud queries; understand transactions and isolation.",
      "indexing strategies and query plans.",
      "project: design a normalized schema for a small app",
      "project: write complex joins and window functions",
      "use: explain/analyze tools"
    ],
    "intermediate": [
      "backups, replication, and migrations.",
      "caching layers and read/write splitting.",
      "project: reporting replica for analytics",
      "project: partitioning/time-series optimization",
      "use: change data capture (cdc)"
    ],
    "advanced": [
      "sharding, ha, and disaster recovery.",
      "observability and performance benchmarking.",
      "project: ha cluster with failover",
      "project: benchmark read/write workloads",
      "use: tpc benchmarks, p99 latency tracking"
    ],
    "expert": [
      "multi-region topologies and governance.",
      "security hardening and auditing.",
      "project: global database design for saas",
      "project: audit logging and compliance toolkit",
      "use: kms/envelope encryption"
    ]
  },
  "timescaledb": {
    "domain": "databases",
    "beginner": [
      "model data and write crud queries; understand transactions and isolation.",
      "indexing strategies and query plans.",
      "project: design a normalized schema for a small app",
      "project: write complex joins and window functions",
      "use: explain/analyze tools"
    ],
    "intermediate": [
      "backups, replication, and migrations.",
      "caching layers and read/write splitting.",
      "project: reporting replica for analytics",
      "project: partitioning/time-series optimization",
      "use: change data capture (cdc)"
    ],
    "advanced": [
      "sharding, ha, and disaster recovery.",
      "observability and performance benchmarking.",
      "project: ha cluster with failover",
      "project: benchmark read/write workloads",
      "use: tpc benchmarks, p99 latency tracking"
    ],
    "expert": [
      "multi-region topologies and governance.",
      "security hardening and auditing.",
      "project: global database design for saas",
      "project: audit logging and compliance toolkit",
      "use: kms/envelope encryption"
    ]
  },
  "aws": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "azure": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "google cloud platform": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "docker": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "kubernetes": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "terraform": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "ansible": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "jenkins": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "gitlab ci": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "circleci": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "helm": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "istio": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "prometheus": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "grafana": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "elk stack": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "serverless": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "cloud functions": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "sre": {
    "domain": "cloud & devops",
    "beginner": [
      "containerize apps with docker and write multi-service docker-compose.",
      "basics of cloud iam, vpc networking, and storage.",
      "project: deploy a containerized web app to a vm",
      "project: static website on object storage + cdn",
      "use: docker, cloud cli (aws/gcp/azure), terraform basics"
    ],
    "intermediate": [
      "kubernetes fundamentals: deployments, services, ingress, hpa.",
      "ci/cd pipelines for build, test, deploy.",
      "project: github actions pipeline with tests and security scans",
      "project: k8s app with helm charts and rolling updates",
      "use: helm, argocd/fluxcd, ingress controllers"
    ],
    "advanced": [
      "observability: logs, metrics, traces; slos and error budgets.",
      "service mesh and zero-downtime strategies.",
      "project: blue/green + canary with progressive delivery",
      "project: multi-env iac with terraform workspaces",
      "use: prometheus/grafana, opentelemetry, istio/linkerd"
    ],
    "expert": [
      "cost-aware architectures, multi-region dr, and security compliance.",
      "platform engineering with golden paths/internal developer platform.",
      "project: multi-region active-passive failover with dns health checks",
      "project: internal developer platform with templates and guardrails",
      "use: backstage, crossplane, opa/gatekeeper"
    ]
  },
  "data science": {
    "domain": "career path",
    "beginner": [
      "write an achievement-focused resume and github readme.",
      "create a simple portfolio highlighting projects.",
      "project: star-formatted resume",
      "project: portfolio with case studies",
      "use: ats-friendly templates, markdown/mdx"
    ],
    "intermediate": [
      "practice behavioral and technical interviews.",
      "contribute to oss and network with peers.",
      "project: mock interviews with feedback",
      "project: first oss pull request",
      "use: leetcode/neetcode, good first issue"
    ],
    "advanced": [
      "system design practice and on-call readiness.",
      "mentoring juniors and giving tech talks.",
      "project: design doc for a scalable service",
      "project: internal brown-bag session",
      "use: grokking sdi, c4 diagrams"
    ],
    "expert": [
      "community leadership and long-term career strategy.",
      "build a personal brand with consistent writing.",
      "project: conference talk/workshop",
      "project: newsletter/blog with original content",
      "use: cfp platforms, analytics"
    ],
    "careers": [
      "Data Scientist",
      "Data Analyst",
      "Business Intelligence Analyst",
      "Machine Learning Engineer"
    ]
  },
  "data analysis": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "pandas": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "numpy": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "matplotlib": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "seaborn": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "scikit-learn": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "tensorflow": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "pytorch": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "keras": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "xgboost": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "lightgbm": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "catboost": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "spark": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "hadoop": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "kafka": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "airflow": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "mlops": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "feature stores": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "nlp": {
    "domain": "nlp & llms",
    "beginner": [
      "text preprocessing: tokenization, stemming, lemmatization, stopwords.",
      "classify movie reviews (imdb) or tweets using scikit-learn.",
      "project: sentiment analyzer",
      "project: keyword extractor with rake/textrank",
      "use: nltk, spacy"
    ],
    "intermediate": [
      "embeddings: word2vec, glove, transformer (bert/distilbert).",
      "named-entity recognition and pos tagging.",
      "project: resume analyzer extracting skills and experience",
      "project: news summarizer (extractive/abstractive)",
      "project: semantic search over your notes with faiss",
      "use: hugging face transformers/datasets, spacy pipelines"
    ],
    "advanced": [
      "fine-tune llms for qa/chat; retrieval-augmented generation (rag).",
      "multilingual nlp, translation, and evaluation.",
      "project: chatbot with memory + tools (rag over docs)",
      "project: domain-specific ner (e.g., medical/legal)",
      "use: peft/lora, langchain/llamaindex, faiss/chroma"
    ],
    "expert": [
      "prompt engineering, evaluation (llm-as-judge), and alignment basics.",
      "model serving, caching, and guardrails in production.",
      "project: production rag service with telemetry and feedback loops",
      "project: contribution to spacy/hf pipelines",
      "use: vllm/tensorrt-llm, triton inference, opentelemetry"
    ],
    "careers": [
      "NLP Engineer",
      "AI Researcher",
      "Machine Learning Engineer"
    ]
  },
  "computer vision": {
    "domain": "nlp & llms",
    "beginner": [
      "text preprocessing: tokenization, stemming, lemmatization, stopwords.",
      "classify movie reviews (imdb) or tweets using scikit-learn.",
      "project: sentiment analyzer",
      "project: keyword extractor with rake/textrank",
      "use: nltk, spacy"
    ],
    "intermediate": [
      "embeddings: word2vec, glove, transformer (bert/distilbert).",
      "named-entity recognition and pos tagging.",
      "project: resume analyzer extracting skills and experience",
      "project: news summarizer (extractive/abstractive)",
      "project: semantic search over your notes with faiss",
      "use: hugging face transformers/datasets, spacy pipelines"
    ],
    "advanced": [
      "fine-tune llms for qa/chat; retrieval-augmented generation (rag).",
      "multilingual nlp, translation, and evaluation.",
      "project: chatbot with memory + tools (rag over docs)",
      "project: domain-specific ner (e.g., medical/legal)",
      "use: peft/lora, langchain/llamaindex, faiss/chroma"
    ],
    "expert": [
      "prompt engineering, evaluation (llm-as-judge), and alignment basics.",
      "model serving, caching, and guardrails in production.",
      "project: production rag service with telemetry and feedback loops",
      "project: contribution to spacy/hf pipelines",
      "use: vllm/tensorrt-llm, triton inference, opentelemetry"
    ],
    "careers": [
      "Computer Vision Engineer",
      "AI Engineer",
      "Research Scientist"
    ]
  },
  "opencv": {
    "domain": "nlp & llms",
    "beginner": [
      "text preprocessing: tokenization, stemming, lemmatization, stopwords.",
      "classify movie reviews (imdb) or tweets using scikit-learn.",
      "project: sentiment analyzer",
      "project: keyword extractor with rake/textrank",
      "use: nltk, spacy"
    ],
    "intermediate": [
      "embeddings: word2vec, glove, transformer (bert/distilbert).",
      "named-entity recognition and pos tagging.",
      "project: resume analyzer extracting skills and experience",
      "project: news summarizer (extractive/abstractive)",
      "project: semantic search over your notes with faiss",
      "use: hugging face transformers/datasets, spacy pipelines"
    ],
    "advanced": [
      "fine-tune llms for qa/chat; retrieval-augmented generation (rag).",
      "multilingual nlp, translation, and evaluation.",
      "project: chatbot with memory + tools (rag over docs)",
      "project: domain-specific ner (e.g., medical/legal)",
      "use: peft/lora, langchain/llamaindex, faiss/chroma"
    ],
    "expert": [
      "prompt engineering, evaluation (llm-as-judge), and alignment basics.",
      "model serving, caching, and guardrails in production.",
      "project: production rag service with telemetry and feedback loops",
      "project: contribution to spacy/hf pipelines",
      "use: vllm/tensorrt-llm, triton inference, opentelemetry"
    ]
  },
  "transformers": {
    "domain": "nlp & llms",
    "beginner": [
      "text preprocessing: tokenization, stemming, lemmatization, stopwords.",
      "classify movie reviews (imdb) or tweets using scikit-learn.",
      "project: sentiment analyzer",
      "project: keyword extractor with rake/textrank",
      "use: nltk, spacy"
    ],
    "intermediate": [
      "embeddings: word2vec, glove, transformer (bert/distilbert).",
      "named-entity recognition and pos tagging.",
      "project: resume analyzer extracting skills and experience",
      "project: news summarizer (extractive/abstractive)",
      "project: semantic search over your notes with faiss",
      "use: hugging face transformers/datasets, spacy pipelines"
    ],
    "advanced": [
      "fine-tune llms for qa/chat; retrieval-augmented generation (rag).",
      "multilingual nlp, translation, and evaluation.",
      "project: chatbot with memory + tools (rag over docs)",
      "project: domain-specific ner (e.g., medical/legal)",
      "use: peft/lora, langchain/llamaindex, faiss/chroma"
    ],
    "expert": [
      "prompt engineering, evaluation (llm-as-judge), and alignment basics.",
      "model serving, caching, and guardrails in production.",
      "project: production rag service with telemetry and feedback loops",
      "project: contribution to spacy/hf pipelines",
      "use: vllm/tensorrt-llm, triton inference, opentelemetry"
    ]
  },
  "bert": {
    "domain": "nlp & llms",
    "beginner": [
      "text preprocessing: tokenization, stemming, lemmatization, stopwords.",
      "classify movie reviews (imdb) or tweets using scikit-learn.",
      "project: sentiment analyzer",
      "project: keyword extractor with rake/textrank",
      "use: nltk, spacy"
    ],
    "intermediate": [
      "embeddings: word2vec, glove, transformer (bert/distilbert).",
      "named-entity recognition and pos tagging.",
      "project: resume analyzer extracting skills and experience",
      "project: news summarizer (extractive/abstractive)",
      "project: semantic search over your notes with faiss",
      "use: hugging face transformers/datasets, spacy pipelines"
    ],
    "advanced": [
      "fine-tune llms for qa/chat; retrieval-augmented generation (rag).",
      "multilingual nlp, translation, and evaluation.",
      "project: chatbot with memory + tools (rag over docs)",
      "project: domain-specific ner (e.g., medical/legal)",
      "use: peft/lora, langchain/llamaindex, faiss/chroma"
    ],
    "expert": [
      "prompt engineering, evaluation (llm-as-judge), and alignment basics.",
      "model serving, caching, and guardrails in production.",
      "project: production rag service with telemetry and feedback loops",
      "project: contribution to spacy/hf pipelines",
      "use: vllm/tensorrt-llm, triton inference, opentelemetry"
    ]
  },
  "gpt": {
    "domain": "nlp & llms",
    "beginner": [
      "text preprocessing: tokenization, stemming, lemmatization, stopwords.",
      "classify movie reviews (imdb) or tweets using scikit-learn.",
      "project: sentiment analyzer",
      "project: keyword extractor with rake/textrank",
      "use: nltk, spacy"
    ],
    "intermediate": [
      "embeddings: word2vec, glove, transformer (bert/distilbert).",
      "named-entity recognition and pos tagging.",
      "project: resume analyzer extracting skills and experience",
      "project: news summarizer (extractive/abstractive)",
      "project: semantic search over your notes with faiss",
      "use: hugging face transformers/datasets, spacy pipelines"
    ],
    "advanced": [
      "fine-tune llms for qa/chat; retrieval-augmented generation (rag).",
      "multilingual nlp, translation, and evaluation.",
      "project: chatbot with memory + tools (rag over docs)",
      "project: domain-specific ner (e.g., medical/legal)",
      "use: peft/lora, langchain/llamaindex, faiss/chroma"
    ],
    "expert": [
      "prompt engineering, evaluation (llm-as-judge), and alignment basics.",
      "model serving, caching, and guardrails in production.",
      "project: production rag service with telemetry and feedback loops",
      "project: contribution to spacy/hf pipelines",
      "use: vllm/tensorrt-llm, triton inference, opentelemetry"
    ]
  },
  "huggingface": {
    "domain": "nlp & llms",
    "beginner": [
      "text preprocessing: tokenization, stemming, lemmatization, stopwords.",
      "classify movie reviews (imdb) or tweets using scikit-learn.",
      "project: sentiment analyzer",
      "project: keyword extractor with rake/textrank",
      "use: nltk, spacy"
    ],
    "intermediate": [
      "embeddings: word2vec, glove, transformer (bert/distilbert).",
      "named-entity recognition and pos tagging.",
      "project: resume analyzer extracting skills and experience",
      "project: news summarizer (extractive/abstractive)",
      "project: semantic search over your notes with faiss",
      "use: hugging face transformers/datasets, spacy pipelines"
    ],
    "advanced": [
      "fine-tune llms for qa/chat; retrieval-augmented generation (rag).",
      "multilingual nlp, translation, and evaluation.",
      "project: chatbot with memory + tools (rag over docs)",
      "project: domain-specific ner (e.g., medical/legal)",
      "use: peft/lora, langchain/llamaindex, faiss/chroma"
    ],
    "expert": [
      "prompt engineering, evaluation (llm-as-judge), and alignment basics.",
      "model serving, caching, and guardrails in production.",
      "project: production rag service with telemetry and feedback loops",
      "project: contribution to spacy/hf pipelines",
      "use: vllm/tensorrt-llm, triton inference, opentelemetry"
    ]
  },
  "nltk": {
    "domain": "nlp & llms",
    "beginner": [
      "text preprocessing: tokenization, stemming, lemmatization, stopwords.",
      "classify movie reviews (imdb) or tweets using scikit-learn.",
      "project: sentiment analyzer",
      "project: keyword extractor with rake/textrank",
      "use: nltk, spacy"
    ],
    "intermediate": [
      "embeddings: word2vec, glove, transformer (bert/distilbert).",
      "named-entity recognition and pos tagging.",
      "project: resume analyzer extracting skills and experience",
      "project: news summarizer (extractive/abstractive)",
      "project: semantic search over your notes with faiss",
      "use: hugging face transformers/datasets, spacy pipelines"
    ],
    "advanced": [
      "fine-tune llms for qa/chat; retrieval-augmented generation (rag).",
      "multilingual nlp, translation, and evaluation.",
      "project: chatbot with memory + tools (rag over docs)",
      "project: domain-specific ner (e.g., medical/legal)",
      "use: peft/lora, langchain/llamaindex, faiss/chroma"
    ],
    "expert": [
      "prompt engineering, evaluation (llm-as-judge), and alignment basics.",
      "model serving, caching, and guardrails in production.",
      "project: production rag service with telemetry and feedback loops",
      "project: contribution to spacy/hf pipelines",
      "use: vllm/tensorrt-llm, triton inference, opentelemetry"
    ]
  },
  "spacy": {
    "domain": "nlp & llms",
    "beginner": [
      "text preprocessing: tokenization, stemming, lemmatization, stopwords.",
      "classify movie reviews (imdb) or tweets using scikit-learn.",
      "project: sentiment analyzer",
      "project: keyword extractor with rake/textrank",
      "use: nltk, spacy"
    ],
    "intermediate": [
      "embeddings: word2vec, glove, transformer (bert/distilbert).",
      "named-entity recognition and pos tagging.",
      "project: resume analyzer extracting skills and experience",
      "project: news summarizer (extractive/abstractive)",
      "project: semantic search over your notes with faiss",
      "use: hugging face transformers/datasets, spacy pipelines"
    ],
    "advanced": [
      "fine-tune llms for qa/chat; retrieval-augmented generation (rag).",
      "multilingual nlp, translation, and evaluation.",
      "project: chatbot with memory + tools (rag over docs)",
      "project: domain-specific ner (e.g., medical/legal)",
      "use: peft/lora, langchain/llamaindex, faiss/chroma"
    ],
    "expert": [
      "prompt engineering, evaluation (llm-as-judge), and alignment basics.",
      "model serving, caching, and guardrails in production.",
      "project: production rag service with telemetry and feedback loops",
      "project: contribution to spacy/hf pipelines",
      "use: vllm/tensorrt-llm, triton inference, opentelemetry"
    ]
  },
  "gensim": {
    "domain": "nlp & llms",
    "beginner": [
      "text preprocessing: tokenization, stemming, lemmatization, stopwords.",
      "classify movie reviews (imdb) or tweets using scikit-learn.",
      "project: sentiment analyzer",
      "project: keyword extractor with rake/textrank",
      "use: nltk, spacy"
    ],
    "intermediate": [
      "embeddings: word2vec, glove, transformer (bert/distilbert).",
      "named-entity recognition and pos tagging.",
      "project: resume analyzer extracting skills and experience",
      "project: news summarizer (extractive/abstractive)",
      "project: semantic search over your notes with faiss",
      "use: hugging face transformers/datasets, spacy pipelines"
    ],
    "advanced": [
      "fine-tune llms for qa/chat; retrieval-augmented generation (rag).",
      "multilingual nlp, translation, and evaluation.",
      "project: chatbot with memory + tools (rag over docs)",
      "project: domain-specific ner (e.g., medical/legal)",
      "use: peft/lora, langchain/llamaindex, faiss/chroma"
    ],
    "expert": [
      "prompt engineering, evaluation (llm-as-judge), and alignment basics.",
      "model serving, caching, and guardrails in production.",
      "project: production rag service with telemetry and feedback loops",
      "project: contribution to spacy/hf pipelines",
      "use: vllm/tensorrt-llm, triton inference, opentelemetry"
    ]
  },
  "sentence transformers": {
    "domain": "nlp & llms",
    "beginner": [
      "text preprocessing: tokenization, stemming, lemmatization, stopwords.",
      "classify movie reviews (imdb) or tweets using scikit-learn.",
      "project: sentiment analyzer",
      "project: keyword extractor with rake/textrank",
      "use: nltk, spacy"
    ],
    "intermediate": [
      "embeddings: word2vec, glove, transformer (bert/distilbert).",
      "named-entity recognition and pos tagging.",
      "project: resume analyzer extracting skills and experience",
      "project: news summarizer (extractive/abstractive)",
      "project: semantic search over your notes with faiss",
      "use: hugging face transformers/datasets, spacy pipelines"
    ],
    "advanced": [
      "fine-tune llms for qa/chat; retrieval-augmented generation (rag).",
      "multilingual nlp, translation, and evaluation.",
      "project: chatbot with memory + tools (rag over docs)",
      "project: domain-specific ner (e.g., medical/legal)",
      "use: peft/lora, langchain/llamaindex, faiss/chroma"
    ],
    "expert": [
      "prompt engineering, evaluation (llm-as-judge), and alignment basics.",
      "model serving, caching, and guardrails in production.",
      "project: production rag service with telemetry and feedback loops",
      "project: contribution to spacy/hf pipelines",
      "use: vllm/tensorrt-llm, triton inference, opentelemetry"
    ]
  },
  "word2vec": {
    "domain": "nlp & llms",
    "beginner": [
      "text preprocessing: tokenization, stemming, lemmatization, stopwords.",
      "classify movie reviews (imdb) or tweets using scikit-learn.",
      "project: sentiment analyzer",
      "project: keyword extractor with rake/textrank",
      "use: nltk, spacy"
    ],
    "intermediate": [
      "embeddings: word2vec, glove, transformer (bert/distilbert).",
      "named-entity recognition and pos tagging.",
      "project: resume analyzer extracting skills and experience",
      "project: news summarizer (extractive/abstractive)",
      "project: semantic search over your notes with faiss",
      "use: hugging face transformers/datasets, spacy pipelines"
    ],
    "advanced": [
      "fine-tune llms for qa/chat; retrieval-augmented generation (rag).",
      "multilingual nlp, translation, and evaluation.",
      "project: chatbot with memory + tools (rag over docs)",
      "project: domain-specific ner (e.g., medical/legal)",
      "use: peft/lora, langchain/llamaindex, faiss/chroma"
    ],
    "expert": [
      "prompt engineering, evaluation (llm-as-judge), and alignment basics.",
      "model serving, caching, and guardrails in production.",
      "project: production rag service with telemetry and feedback loops",
      "project: contribution to spacy/hf pipelines",
      "use: vllm/tensorrt-llm, triton inference, opentelemetry"
    ]
  },
  "android": {
    "domain": "mobile & cross-platform",
    "beginner": [
      "platform setup, ui components, navigation, and persistence.",
      "network layer and json parsing.",
      "project: todo app",
      "project: weather app",
      "use: room/coredata, retrofit/alamofire"
    ],
    "intermediate": [
      "background work, notifications, and sensors.",
      "architecture patterns (mvvm/clean).",
      "project: e-commerce app with payments",
      "project: maps + geolocation app",
      "use: jetpack/swiftui, di (hilt/koin)"
    ],
    "advanced": [
      "animations, accessibility, and performance.",
      "modularization and feature flags.",
      "project: offline-first sync app",
      "project: multi-module project with ci",
      "use: fastlane, firebase"
    ],
    "expert": [
      "custom native modules and sdks.",
      "scalable mobile architecture and release trains.",
      "project: sdk for payments/analytics",
      "project: open-source ui component library",
      "use: ndk/metal, proguard/bitcode"
    ]
  },
  "ios": {
    "domain": "mobile & cross-platform",
    "beginner": [
      "platform setup, ui components, navigation, and persistence.",
      "network layer and json parsing.",
      "project: todo app",
      "project: weather app",
      "use: room/coredata, retrofit/alamofire"
    ],
    "intermediate": [
      "background work, notifications, and sensors.",
      "architecture patterns (mvvm/clean).",
      "project: e-commerce app with payments",
      "project: maps + geolocation app",
      "use: jetpack/swiftui, di (hilt/koin)"
    ],
    "advanced": [
      "animations, accessibility, and performance.",
      "modularization and feature flags.",
      "project: offline-first sync app",
      "project: multi-module project with ci",
      "use: fastlane, firebase"
    ],
    "expert": [
      "custom native modules and sdks.",
      "scalable mobile architecture and release trains.",
      "project: sdk for payments/analytics",
      "project: open-source ui component library",
      "use: ndk/metal, proguard/bitcode"
    ]
  },
  "react native": {
    "domain": "mobile & cross-platform",
    "beginner": [
      "js/ts setup, components, navigation, basic styling.",
      "network requests and local storage.",
      "project: notes app with sqlite",
      "project: weather app using public api",
      "use: react navigation, asyncstorage/sqlite"
    ],
    "intermediate": [
      "native modules and bridging.",
      "push notifications and deep links.",
      "project: chat app with websockets",
      "project: e-commerce app with stripe",
      "use: reanimated, redux/zustand, fastimage"
    ],
    "advanced": [
      "performance profiling and code splitting.",
      "ota updates and ci/cd.",
      "project: offline-first sync layer",
      "project: monorepo with shared ui library",
      "use: codepush/appcenter, detox"
    ],
    "expert": [
      "custom native ui components.",
      "contribute to rn core or libraries.",
      "project: cross-platform plugin",
      "project: open-source ui kit",
      "use: fabric, jsi"
    ]
  },
  "flutter": {
    "domain": "mobile & cross-platform",
    "beginner": [
      "dart basics, widgets, stateful/stateless components.",
      "layouts and navigation.",
      "project: todo app with local persistence",
      "project: weather app consuming http api",
      "use: provider/getx/bloc, http, sqflite"
    ],
    "intermediate": [
      "state management patterns and animations.",
      "native integrations (camera, geoloc, notifications).",
      "project: e-commerce app with cart and payments",
      "project: chat app with firebase",
      "use: riverpod/bloc, firebase"
    ],
    "advanced": [
      "offline-first sync, background tasks.",
      "ci/cd for mobile and store distribution.",
      "project: pwa + mobile hybrid release",
      "project: multi-flavor builds with feature flags",
      "use: hive/isar, fastlane, codemagic"
    ],
    "expert": [
      "performance profiling and memory leaks.",
      "create a plugin bridging to native code.",
      "project: custom native plugin (android/ios)",
      "project: design system library for flutter",
      "use: dart:ffi, platform channels"
    ]
  },
  "swiftui": {
    "domain": "mobile & cross-platform",
    "beginner": [
      "platform setup, ui components, navigation, and persistence.",
      "network layer and json parsing.",
      "project: todo app",
      "project: weather app",
      "use: room/coredata, retrofit/alamofire"
    ],
    "intermediate": [
      "background work, notifications, and sensors.",
      "architecture patterns (mvvm/clean).",
      "project: e-commerce app with payments",
      "project: maps + geolocation app",
      "use: jetpack/swiftui, di (hilt/koin)"
    ],
    "advanced": [
      "animations, accessibility, and performance.",
      "modularization and feature flags.",
      "project: offline-first sync app",
      "project: multi-module project with ci",
      "use: fastlane, firebase"
    ],
    "expert": [
      "custom native modules and sdks.",
      "scalable mobile architecture and release trains.",
      "project: sdk for payments/analytics",
      "project: open-source ui component library",
      "use: ndk/metal, proguard/bitcode"
    ]
  },
  "kotlin multiplatform": {
    "domain": "mobile & cross-platform",
    "beginner": [
      "platform setup, ui components, navigation, and persistence.",
      "network layer and json parsing.",
      "project: todo app",
      "project: weather app",
      "use: room/coredata, retrofit/alamofire"
    ],
    "intermediate": [
      "background work, notifications, and sensors.",
      "architecture patterns (mvvm/clean).",
      "project: e-commerce app with payments",
      "project: maps + geolocation app",
      "use: jetpack/swiftui, di (hilt/koin)"
    ],
    "advanced": [
      "animations, accessibility, and performance.",
      "modularization and feature flags.",
      "project: offline-first sync app",
      "project: multi-module project with ci",
      "use: fastlane, firebase"
    ],
    "expert": [
      "custom native modules and sdks.",
      "scalable mobile architecture and release trains.",
      "project: sdk for payments/analytics",
      "project: open-source ui component library",
      "use: ndk/metal, proguard/bitcode"
    ]
  },
  "xamarin": {
    "domain": "mobile & cross-platform",
    "beginner": [
      "platform setup, ui components, navigation, and persistence.",
      "network layer and json parsing.",
      "project: todo app",
      "project: weather app",
      "use: room/coredata, retrofit/alamofire"
    ],
    "intermediate": [
      "background work, notifications, and sensors.",
      "architecture patterns (mvvm/clean).",
      "project: e-commerce app with payments",
      "project: maps + geolocation app",
      "use: jetpack/swiftui, di (hilt/koin)"
    ],
    "advanced": [
      "animations, accessibility, and performance.",
      "modularization and feature flags.",
      "project: offline-first sync app",
      "project: multi-module project with ci",
      "use: fastlane, firebase"
    ],
    "expert": [
      "custom native modules and sdks.",
      "scalable mobile architecture and release trains.",
      "project: sdk for payments/analytics",
      "project: open-source ui component library",
      "use: ndk/metal, proguard/bitcode"
    ]
  },
  "ionic": {
    "domain": "mobile & cross-platform",
    "beginner": [
      "platform setup, ui components, navigation, and persistence.",
      "network layer and json parsing.",
      "project: todo app",
      "project: weather app",
      "use: room/coredata, retrofit/alamofire"
    ],
    "intermediate": [
      "background work, notifications, and sensors.",
      "architecture patterns (mvvm/clean).",
      "project: e-commerce app with payments",
      "project: maps + geolocation app",
      "use: jetpack/swiftui, di (hilt/koin)"
    ],
    "advanced": [
      "animations, accessibility, and performance.",
      "modularization and feature flags.",
      "project: offline-first sync app",
      "project: multi-module project with ci",
      "use: fastlane, firebase"
    ],
    "expert": [
      "custom native modules and sdks.",
      "scalable mobile architecture and release trains.",
      "project: sdk for payments/analytics",
      "project: open-source ui component library",
      "use: ndk/metal, proguard/bitcode"
    ]
  },
  "cordova": {
    "domain": "mobile & cross-platform",
    "beginner": [
      "platform setup, ui components, navigation, and persistence.",
      "network layer and json parsing.",
      "project: todo app",
      "project: weather app",
      "use: room/coredata, retrofit/alamofire"
    ],
    "intermediate": [
      "background work, notifications, and sensors.",
      "architecture patterns (mvvm/clean).",
      "project: e-commerce app with payments",
      "project: maps + geolocation app",
      "use: jetpack/swiftui, di (hilt/koin)"
    ],
    "advanced": [
      "animations, accessibility, and performance.",
      "modularization and feature flags.",
      "project: offline-first sync app",
      "project: multi-module project with ci",
      "use: fastlane, firebase"
    ],
    "expert": [
      "custom native modules and sdks.",
      "scalable mobile architecture and release trains.",
      "project: sdk for payments/analytics",
      "project: open-source ui component library",
      "use: ndk/metal, proguard/bitcode"
    ]
  },
  "cybersecurity": {
    "domain": "career path",
    "beginner": [
      "write an achievement-focused resume and github readme.",
      "create a simple portfolio highlighting projects.",
      "project: star-formatted resume",
      "project: portfolio with case studies",
      "use: ats-friendly templates, markdown/mdx"
    ],
    "intermediate": [
      "practice behavioral and technical interviews.",
      "contribute to oss and network with peers.",
      "project: mock interviews with feedback",
      "project: first oss pull request",
      "use: leetcode/neetcode, good first issue"
    ],
    "advanced": [
      "system design practice and on-call readiness.",
      "mentoring juniors and giving tech talks.",
      "project: design doc for a scalable service",
      "project: internal brown-bag session",
      "use: grokking sdi, c4 diagrams"
    ],
    "expert": [
      "community leadership and long-term career strategy.",
      "build a personal brand with consistent writing.",
      "project: conference talk/workshop",
      "project: newsletter/blog with original content",
      "use: cfp platforms, analytics"
    ]
  },
  "ethical hacking": {
    "domain": "security & networking",
    "beginner": [
      "networking layers (osi/tcp/ip), subnets, routing, dns, tls.",
      "security basics: cia triad, authn/z, hashing vs encryption.",
      "project: packet lab with wireshark",
      "project: harden a web app against owasp top 10",
      "use: nmap, wireshark, owasp zap"
    ],
    "intermediate": [
      "identity and access (oauth2/oidc), sso, mfa.",
      "network security: firewalls, vpns, ids/ips.",
      "project: sso via oidc for a sample app",
      "project: ids with suricata + elk",
      "use: keycloak, suricata/snort, zeek"
    ],
    "advanced": [
      "threat modeling, zero trust, secrets management.",
      "security testing automation and supply-chain security.",
      "project: sbom + sca in ci/cd",
      "project: mtls service mesh with policy enforcement",
      "use: sigstore/cosign, trivy, opa/kyverno"
    ],
    "expert": [
      "incident response, forensics, and red/blue/purple teaming.",
      "cloud-native security and compliance frameworks.",
      "project: attack simulation lab and playbooks",
      "project: multi-cloud waf + ddos protection strategy",
      "use: mitre att&ck, aws/gcp/azure security services"
    ]
  },
  "penetration testing": {
    "domain": "security & networking",
    "beginner": [
      "networking layers (osi/tcp/ip), subnets, routing, dns, tls.",
      "security basics: cia triad, authn/z, hashing vs encryption.",
      "project: packet lab with wireshark",
      "project: harden a web app against owasp top 10",
      "use: nmap, wireshark, owasp zap"
    ],
    "intermediate": [
      "identity and access (oauth2/oidc), sso, mfa.",
      "network security: firewalls, vpns, ids/ips.",
      "project: sso via oidc for a sample app",
      "project: ids with suricata + elk",
      "use: keycloak, suricata/snort, zeek"
    ],
    "advanced": [
      "threat modeling, zero trust, secrets management.",
      "security testing automation and supply-chain security.",
      "project: sbom + sca in ci/cd",
      "project: mtls service mesh with policy enforcement",
      "use: sigstore/cosign, trivy, opa/kyverno"
    ],
    "expert": [
      "incident response, forensics, and red/blue/purple teaming.",
      "cloud-native security and compliance frameworks.",
      "project: attack simulation lab and playbooks",
      "project: multi-cloud waf + ddos protection strategy",
      "use: mitre att&ck, aws/gcp/azure security services"
    ]
  },
  "metasploit": {
    "domain": "security & networking",
    "beginner": [
      "networking layers (osi/tcp/ip), subnets, routing, dns, tls.",
      "security basics: cia triad, authn/z, hashing vs encryption.",
      "project: packet lab with wireshark",
      "project: harden a web app against owasp top 10",
      "use: nmap, wireshark, owasp zap"
    ],
    "intermediate": [
      "identity and access (oauth2/oidc), sso, mfa.",
      "network security: firewalls, vpns, ids/ips.",
      "project: sso via oidc for a sample app",
      "project: ids with suricata + elk",
      "use: keycloak, suricata/snort, zeek"
    ],
    "advanced": [
      "threat modeling, zero trust, secrets management.",
      "security testing automation and supply-chain security.",
      "project: sbom + sca in ci/cd",
      "project: mtls service mesh with policy enforcement",
      "use: sigstore/cosign, trivy, opa/kyverno"
    ],
    "expert": [
      "incident response, forensics, and red/blue/purple teaming.",
      "cloud-native security and compliance frameworks.",
      "project: attack simulation lab and playbooks",
      "project: multi-cloud waf + ddos protection strategy",
      "use: mitre att&ck, aws/gcp/azure security services"
    ]
  },
  "owasp": {
    "domain": "security & networking",
    "beginner": [
      "networking layers (osi/tcp/ip), subnets, routing, dns, tls.",
      "security basics: cia triad, authn/z, hashing vs encryption.",
      "project: packet lab with wireshark",
      "project: harden a web app against owasp top 10",
      "use: nmap, wireshark, owasp zap"
    ],
    "intermediate": [
      "identity and access (oauth2/oidc), sso, mfa.",
      "network security: firewalls, vpns, ids/ips.",
      "project: sso via oidc for a sample app",
      "project: ids with suricata + elk",
      "use: keycloak, suricata/snort, zeek"
    ],
    "advanced": [
      "threat modeling, zero trust, secrets management.",
      "security testing automation and supply-chain security.",
      "project: sbom + sca in ci/cd",
      "project: mtls service mesh with policy enforcement",
      "use: sigstore/cosign, trivy, opa/kyverno"
    ],
    "expert": [
      "incident response, forensics, and red/blue/purple teaming.",
      "cloud-native security and compliance frameworks.",
      "project: attack simulation lab and playbooks",
      "project: multi-cloud waf + ddos protection strategy",
      "use: mitre att&ck, aws/gcp/azure security services"
    ]
  },
  "siem": {
    "domain": "security & networking",
    "beginner": [
      "networking layers (osi/tcp/ip), subnets, routing, dns, tls.",
      "security basics: cia triad, authn/z, hashing vs encryption.",
      "project: packet lab with wireshark",
      "project: harden a web app against owasp top 10",
      "use: nmap, wireshark, owasp zap"
    ],
    "intermediate": [
      "identity and access (oauth2/oidc), sso, mfa.",
      "network security: firewalls, vpns, ids/ips.",
      "project: sso via oidc for a sample app",
      "project: ids with suricata + elk",
      "use: keycloak, suricata/snort, zeek"
    ],
    "advanced": [
      "threat modeling, zero trust, secrets management.",
      "security testing automation and supply-chain security.",
      "project: sbom + sca in ci/cd",
      "project: mtls service mesh with policy enforcement",
      "use: sigstore/cosign, trivy, opa/kyverno"
    ],
    "expert": [
      "incident response, forensics, and red/blue/purple teaming.",
      "cloud-native security and compliance frameworks.",
      "project: attack simulation lab and playbooks",
      "project: multi-cloud waf + ddos protection strategy",
      "use: mitre att&ck, aws/gcp/azure security services"
    ]
  },
  "wireshark": {
    "domain": "security & networking",
    "beginner": [
      "networking layers (osi/tcp/ip), subnets, routing, dns, tls.",
      "security basics: cia triad, authn/z, hashing vs encryption.",
      "project: packet lab with wireshark",
      "project: harden a web app against owasp top 10",
      "use: nmap, wireshark, owasp zap"
    ],
    "intermediate": [
      "identity and access (oauth2/oidc), sso, mfa.",
      "network security: firewalls, vpns, ids/ips.",
      "project: sso via oidc for a sample app",
      "project: ids with suricata + elk",
      "use: keycloak, suricata/snort, zeek"
    ],
    "advanced": [
      "threat modeling, zero trust, secrets management.",
      "security testing automation and supply-chain security.",
      "project: sbom + sca in ci/cd",
      "project: mtls service mesh with policy enforcement",
      "use: sigstore/cosign, trivy, opa/kyverno"
    ],
    "expert": [
      "incident response, forensics, and red/blue/purple teaming.",
      "cloud-native security and compliance frameworks.",
      "project: attack simulation lab and playbooks",
      "project: multi-cloud waf + ddos protection strategy",
      "use: mitre att&ck, aws/gcp/azure security services"
    ]
  },
  "tls/ssl": {
    "domain": "security & networking",
    "beginner": [
      "networking layers (osi/tcp/ip), subnets, routing, dns, tls.",
      "security basics: cia triad, authn/z, hashing vs encryption.",
      "project: packet lab with wireshark",
      "project: harden a web app against owasp top 10",
      "use: nmap, wireshark, owasp zap"
    ],
    "intermediate": [
      "identity and access (oauth2/oidc), sso, mfa.",
      "network security: firewalls, vpns, ids/ips.",
      "project: sso via oidc for a sample app",
      "project: ids with suricata + elk",
      "use: keycloak, suricata/snort, zeek"
    ],
    "advanced": [
      "threat modeling, zero trust, secrets management.",
      "security testing automation and supply-chain security.",
      "project: sbom + sca in ci/cd",
      "project: mtls service mesh with policy enforcement",
      "use: sigstore/cosign, trivy, opa/kyverno"
    ],
    "expert": [
      "incident response, forensics, and red/blue/purple teaming.",
      "cloud-native security and compliance frameworks.",
      "project: attack simulation lab and playbooks",
      "project: multi-cloud waf + ddos protection strategy",
      "use: mitre att&ck, aws/gcp/azure security services"
    ]
  },
  "vpn": {
    "domain": "security & networking",
    "beginner": [
      "networking layers (osi/tcp/ip), subnets, routing, dns, tls.",
      "security basics: cia triad, authn/z, hashing vs encryption.",
      "project: packet lab with wireshark",
      "project: harden a web app against owasp top 10",
      "use: nmap, wireshark, owasp zap"
    ],
    "intermediate": [
      "identity and access (oauth2/oidc), sso, mfa.",
      "network security: firewalls, vpns, ids/ips.",
      "project: sso via oidc for a sample app",
      "project: ids with suricata + elk",
      "use: keycloak, suricata/snort, zeek"
    ],
    "advanced": [
      "threat modeling, zero trust, secrets management.",
      "security testing automation and supply-chain security.",
      "project: sbom + sca in ci/cd",
      "project: mtls service mesh with policy enforcement",
      "use: sigstore/cosign, trivy, opa/kyverno"
    ],
    "expert": [
      "incident response, forensics, and red/blue/purple teaming.",
      "cloud-native security and compliance frameworks.",
      "project: attack simulation lab and playbooks",
      "project: multi-cloud waf + ddos protection strategy",
      "use: mitre att&ck, aws/gcp/azure security services"
    ]
  },
  "firewalls": {
    "domain": "security & networking",
    "beginner": [
      "networking layers (osi/tcp/ip), subnets, routing, dns, tls.",
      "security basics: cia triad, authn/z, hashing vs encryption.",
      "project: packet lab with wireshark",
      "project: harden a web app against owasp top 10",
      "use: nmap, wireshark, owasp zap"
    ],
    "intermediate": [
      "identity and access (oauth2/oidc), sso, mfa.",
      "network security: firewalls, vpns, ids/ips.",
      "project: sso via oidc for a sample app",
      "project: ids with suricata + elk",
      "use: keycloak, suricata/snort, zeek"
    ],
    "advanced": [
      "threat modeling, zero trust, secrets management.",
      "security testing automation and supply-chain security.",
      "project: sbom + sca in ci/cd",
      "project: mtls service mesh with policy enforcement",
      "use: sigstore/cosign, trivy, opa/kyverno"
    ],
    "expert": [
      "incident response, forensics, and red/blue/purple teaming.",
      "cloud-native security and compliance frameworks.",
      "project: attack simulation lab and playbooks",
      "project: multi-cloud waf + ddos protection strategy",
      "use: mitre att&ck, aws/gcp/azure security services"
    ]
  },
  "identity & access management": {
    "domain": "security & networking",
    "beginner": [
      "networking layers (osi/tcp/ip), subnets, routing, dns, tls.",
      "security basics: cia triad, authn/z, hashing vs encryption.",
      "project: packet lab with wireshark",
      "project: harden a web app against owasp top 10",
      "use: nmap, wireshark, owasp zap"
    ],
    "intermediate": [
      "identity and access (oauth2/oidc), sso, mfa.",
      "network security: firewalls, vpns, ids/ips.",
      "project: sso via oidc for a sample app",
      "project: ids with suricata + elk",
      "use: keycloak, suricata/snort, zeek"
    ],
    "advanced": [
      "threat modeling, zero trust, secrets management.",
      "security testing automation and supply-chain security.",
      "project: sbom + sca in ci/cd",
      "project: mtls service mesh with policy enforcement",
      "use: sigstore/cosign, trivy, opa/kyverno"
    ],
    "expert": [
      "incident response, forensics, and red/blue/purple teaming.",
      "cloud-native security and compliance frameworks.",
      "project: attack simulation lab and playbooks",
      "project: multi-cloud waf + ddos protection strategy",
      "use: mitre att&ck, aws/gcp/azure security services"
    ]
  },
  "testing": {
    "domain": "testing & qa",
    "beginner": [
      "testing pyramid: unit, integration, e2e; assertions and fixtures.",
      "set up unit tests and coverage.",
      "project: write tests for an existing microservice",
      "project: add ci to run tests on prs",
      "use: pytest/junit/jest, coverage.py/nyc/jacoco"
    ],
    "intermediate": [
      "e2e tests for web and apis; flake detection.",
      "property-based and contract testing.",
      "project: cypress/playwright suite for a web app",
      "project: consumer-driven contracts with pact",
      "use: cypress/playwright, pact"
    ],
    "advanced": [
      "performance/load testing and chaos engineering.",
      "test data management and synthetic data.",
      "project: k6/jmeter performance suite",
      "project: resilience tests with chaos experiments",
      "use: k6/jmeter, gremlin/litmus"
    ],
    "expert": [
      "test strategy at scale and flaky test reduction.",
      "build internal testing libraries and tooling.",
      "project: visual regression testing service",
      "project: mutation testing to assess test strength",
      "use: stryker/mutmut, allure/reportportal"
    ]
  },
  "selenium": {
    "domain": "testing & qa",
    "beginner": [
      "testing pyramid: unit, integration, e2e; assertions and fixtures.",
      "set up unit tests and coverage.",
      "project: write tests for an existing microservice",
      "project: add ci to run tests on prs",
      "use: pytest/junit/jest, coverage.py/nyc/jacoco"
    ],
    "intermediate": [
      "e2e tests for web and apis; flake detection.",
      "property-based and contract testing.",
      "project: cypress/playwright suite for a web app",
      "project: consumer-driven contracts with pact",
      "use: cypress/playwright, pact"
    ],
    "advanced": [
      "performance/load testing and chaos engineering.",
      "test data management and synthetic data.",
      "project: k6/jmeter performance suite",
      "project: resilience tests with chaos experiments",
      "use: k6/jmeter, gremlin/litmus"
    ],
    "expert": [
      "test strategy at scale and flaky test reduction.",
      "build internal testing libraries and tooling.",
      "project: visual regression testing service",
      "project: mutation testing to assess test strength",
      "use: stryker/mutmut, allure/reportportal"
    ]
  },
  "pytest": {
    "domain": "testing & qa",
    "beginner": [
      "testing pyramid: unit, integration, e2e; assertions and fixtures.",
      "set up unit tests and coverage.",
      "project: write tests for an existing microservice",
      "project: add ci to run tests on prs",
      "use: pytest/junit/jest, coverage.py/nyc/jacoco"
    ],
    "intermediate": [
      "e2e tests for web and apis; flake detection.",
      "property-based and contract testing.",
      "project: cypress/playwright suite for a web app",
      "project: consumer-driven contracts with pact",
      "use: cypress/playwright, pact"
    ],
    "advanced": [
      "performance/load testing and chaos engineering.",
      "test data management and synthetic data.",
      "project: k6/jmeter performance suite",
      "project: resilience tests with chaos experiments",
      "use: k6/jmeter, gremlin/litmus"
    ],
    "expert": [
      "test strategy at scale and flaky test reduction.",
      "build internal testing libraries and tooling.",
      "project: visual regression testing service",
      "project: mutation testing to assess test strength",
      "use: stryker/mutmut, allure/reportportal"
    ]
  },
  "junit": {
    "domain": "testing & qa",
    "beginner": [
      "testing pyramid: unit, integration, e2e; assertions and fixtures.",
      "set up unit tests and coverage.",
      "project: write tests for an existing microservice",
      "project: add ci to run tests on prs",
      "use: pytest/junit/jest, coverage.py/nyc/jacoco"
    ],
    "intermediate": [
      "e2e tests for web and apis; flake detection.",
      "property-based and contract testing.",
      "project: cypress/playwright suite for a web app",
      "project: consumer-driven contracts with pact",
      "use: cypress/playwright, pact"
    ],
    "advanced": [
      "performance/load testing and chaos engineering.",
      "test data management and synthetic data.",
      "project: k6/jmeter performance suite",
      "project: resilience tests with chaos experiments",
      "use: k6/jmeter, gremlin/litmus"
    ],
    "expert": [
      "test strategy at scale and flaky test reduction.",
      "build internal testing libraries and tooling.",
      "project: visual regression testing service",
      "project: mutation testing to assess test strength",
      "use: stryker/mutmut, allure/reportportal"
    ]
  },
  "mocha": {
    "domain": "testing & qa",
    "beginner": [
      "testing pyramid: unit, integration, e2e; assertions and fixtures.",
      "set up unit tests and coverage.",
      "project: write tests for an existing microservice",
      "project: add ci to run tests on prs",
      "use: pytest/junit/jest, coverage.py/nyc/jacoco"
    ],
    "intermediate": [
      "e2e tests for web and apis; flake detection.",
      "property-based and contract testing.",
      "project: cypress/playwright suite for a web app",
      "project: consumer-driven contracts with pact",
      "use: cypress/playwright, pact"
    ],
    "advanced": [
      "performance/load testing and chaos engineering.",
      "test data management and synthetic data.",
      "project: k6/jmeter performance suite",
      "project: resilience tests with chaos experiments",
      "use: k6/jmeter, gremlin/litmus"
    ],
    "expert": [
      "test strategy at scale and flaky test reduction.",
      "build internal testing libraries and tooling.",
      "project: visual regression testing service",
      "project: mutation testing to assess test strength",
      "use: stryker/mutmut, allure/reportportal"
    ]
  },
  "cypress": {
    "domain": "testing & qa",
    "beginner": [
      "testing pyramid: unit, integration, e2e; assertions and fixtures.",
      "set up unit tests and coverage.",
      "project: write tests for an existing microservice",
      "project: add ci to run tests on prs",
      "use: pytest/junit/jest, coverage.py/nyc/jacoco"
    ],
    "intermediate": [
      "e2e tests for web and apis; flake detection.",
      "property-based and contract testing.",
      "project: cypress/playwright suite for a web app",
      "project: consumer-driven contracts with pact",
      "use: cypress/playwright, pact"
    ],
    "advanced": [
      "performance/load testing and chaos engineering.",
      "test data management and synthetic data.",
      "project: k6/jmeter performance suite",
      "project: resilience tests with chaos experiments",
      "use: k6/jmeter, gremlin/litmus"
    ],
    "expert": [
      "test strategy at scale and flaky test reduction.",
      "build internal testing libraries and tooling.",
      "project: visual regression testing service",
      "project: mutation testing to assess test strength",
      "use: stryker/mutmut, allure/reportportal"
    ]
  },
  "jest": {
    "domain": "testing & qa",
    "beginner": [
      "testing pyramid: unit, integration, e2e; assertions and fixtures.",
      "set up unit tests and coverage.",
      "project: write tests for an existing microservice",
      "project: add ci to run tests on prs",
      "use: pytest/junit/jest, coverage.py/nyc/jacoco"
    ],
    "intermediate": [
      "e2e tests for web and apis; flake detection.",
      "property-based and contract testing.",
      "project: cypress/playwright suite for a web app",
      "project: consumer-driven contracts with pact",
      "use: cypress/playwright, pact"
    ],
    "advanced": [
      "performance/load testing and chaos engineering.",
      "test data management and synthetic data.",
      "project: k6/jmeter performance suite",
      "project: resilience tests with chaos experiments",
      "use: k6/jmeter, gremlin/litmus"
    ],
    "expert": [
      "test strategy at scale and flaky test reduction.",
      "build internal testing libraries and tooling.",
      "project: visual regression testing service",
      "project: mutation testing to assess test strength",
      "use: stryker/mutmut, allure/reportportal"
    ]
  },
  "postman": {
    "domain": "testing & qa",
    "beginner": [
      "testing pyramid: unit, integration, e2e; assertions and fixtures.",
      "set up unit tests and coverage.",
      "project: write tests for an existing microservice",
      "project: add ci to run tests on prs",
      "use: pytest/junit/jest, coverage.py/nyc/jacoco"
    ],
    "intermediate": [
      "e2e tests for web and apis; flake detection.",
      "property-based and contract testing.",
      "project: cypress/playwright suite for a web app",
      "project: consumer-driven contracts with pact",
      "use: cypress/playwright, pact"
    ],
    "advanced": [
      "performance/load testing and chaos engineering.",
      "test data management and synthetic data.",
      "project: k6/jmeter performance suite",
      "project: resilience tests with chaos experiments",
      "use: k6/jmeter, gremlin/litmus"
    ],
    "expert": [
      "test strategy at scale and flaky test reduction.",
      "build internal testing libraries and tooling.",
      "project: visual regression testing service",
      "project: mutation testing to assess test strength",
      "use: stryker/mutmut, allure/reportportal"
    ]
  },
  "load testing": {
    "domain": "testing & qa",
    "beginner": [
      "testing pyramid: unit, integration, e2e; assertions and fixtures.",
      "set up unit tests and coverage.",
      "project: write tests for an existing microservice",
      "project: add ci to run tests on prs",
      "use: pytest/junit/jest, coverage.py/nyc/jacoco"
    ],
    "intermediate": [
      "e2e tests for web and apis; flake detection.",
      "property-based and contract testing.",
      "project: cypress/playwright suite for a web app",
      "project: consumer-driven contracts with pact",
      "use: cypress/playwright, pact"
    ],
    "advanced": [
      "performance/load testing and chaos engineering.",
      "test data management and synthetic data.",
      "project: k6/jmeter performance suite",
      "project: resilience tests with chaos experiments",
      "use: k6/jmeter, gremlin/litmus"
    ],
    "expert": [
      "test strategy at scale and flaky test reduction.",
      "build internal testing libraries and tooling.",
      "project: visual regression testing service",
      "project: mutation testing to assess test strength",
      "use: stryker/mutmut, allure/reportportal"
    ]
  },
  "test automation": {
    "domain": "testing & qa",
    "beginner": [
      "testing pyramid: unit, integration, e2e; assertions and fixtures.",
      "set up unit tests and coverage.",
      "project: write tests for an existing microservice",
      "project: add ci to run tests on prs",
      "use: pytest/junit/jest, coverage.py/nyc/jacoco"
    ],
    "intermediate": [
      "e2e tests for web and apis; flake detection.",
      "property-based and contract testing.",
      "project: cypress/playwright suite for a web app",
      "project: consumer-driven contracts with pact",
      "use: cypress/playwright, pact"
    ],
    "advanced": [
      "performance/load testing and chaos engineering.",
      "test data management and synthetic data.",
      "project: k6/jmeter performance suite",
      "project: resilience tests with chaos experiments",
      "use: k6/jmeter, gremlin/litmus"
    ],
    "expert": [
      "test strategy at scale and flaky test reduction.",
      "build internal testing libraries and tooling.",
      "project: visual regression testing service",
      "project: mutation testing to assess test strength",
      "use: stryker/mutmut, allure/reportportal"
    ]
  },
  "blockchain": {
    "domain": "blockchain & web3",
    "beginner": [
      "blockchain basics, wallets, transactions, gas, and networks.",
      "smart contract primitives and development workflows.",
      "project: token erc-20 or nft erc-721 on testnet",
      "project: simple crowdfunding dapp",
      "use: solidity, hardhat/foundry, metamask"
    ],
    "intermediate": [
      "dapp frontends, event indexing, and oracles.",
      "security pitfalls (reentrancy, integer overflow).",
      "project: marketplace dapp with listings and escrow",
      "project: indexing with the graph",
      "use: ethers.js/web3.js, openzeppelin"
    ],
    "advanced": [
      "layer 2, rollups, bridges, and account abstraction.",
      "gas optimization and upgradeable contracts.",
      "project: cross-chain bridge poc",
      "project: aa smart wallet with session keys",
      "use: optimism/arbitrum, zksync/polygon, openzeppelin upgrades"
    ],
    "expert": [
      "formal verification and audits.",
      "protocol design and tokenomics.",
      "project: mev-resistant auction design",
      "project: on-chain governance module",
      "use: slither, echidna, foundry fuzzing"
    ]
  },
  "solidity": {
    "domain": "blockchain & web3",
    "beginner": [
      "blockchain basics, wallets, transactions, gas, and networks.",
      "smart contract primitives and development workflows.",
      "project: token erc-20 or nft erc-721 on testnet",
      "project: simple crowdfunding dapp",
      "use: solidity, hardhat/foundry, metamask"
    ],
    "intermediate": [
      "dapp frontends, event indexing, and oracles.",
      "security pitfalls (reentrancy, integer overflow).",
      "project: marketplace dapp with listings and escrow",
      "project: indexing with the graph",
      "use: ethers.js/web3.js, openzeppelin"
    ],
    "advanced": [
      "layer 2, rollups, bridges, and account abstraction.",
      "gas optimization and upgradeable contracts.",
      "project: cross-chain bridge poc",
      "project: aa smart wallet with session keys",
      "use: optimism/arbitrum, zksync/polygon, openzeppelin upgrades"
    ],
    "expert": [
      "formal verification and audits.",
      "protocol design and tokenomics.",
      "project: mev-resistant auction design",
      "project: on-chain governance module",
      "use: slither, echidna, foundry fuzzing"
    ]
  },
  "ethereum": {
    "domain": "blockchain & web3",
    "beginner": [
      "blockchain basics, wallets, transactions, gas, and networks.",
      "smart contract primitives and development workflows.",
      "project: token erc-20 or nft erc-721 on testnet",
      "project: simple crowdfunding dapp",
      "use: solidity, hardhat/foundry, metamask"
    ],
    "intermediate": [
      "dapp frontends, event indexing, and oracles.",
      "security pitfalls (reentrancy, integer overflow).",
      "project: marketplace dapp with listings and escrow",
      "project: indexing with the graph",
      "use: ethers.js/web3.js, openzeppelin"
    ],
    "advanced": [
      "layer 2, rollups, bridges, and account abstraction.",
      "gas optimization and upgradeable contracts.",
      "project: cross-chain bridge poc",
      "project: aa smart wallet with session keys",
      "use: optimism/arbitrum, zksync/polygon, openzeppelin upgrades"
    ],
    "expert": [
      "formal verification and audits.",
      "protocol design and tokenomics.",
      "project: mev-resistant auction design",
      "project: on-chain governance module",
      "use: slither, echidna, foundry fuzzing"
    ]
  },
  "smart contracts": {
    "domain": "blockchain & web3",
    "beginner": [
      "blockchain basics, wallets, transactions, gas, and networks.",
      "smart contract primitives and development workflows.",
      "project: token erc-20 or nft erc-721 on testnet",
      "project: simple crowdfunding dapp",
      "use: solidity, hardhat/foundry, metamask"
    ],
    "intermediate": [
      "dapp frontends, event indexing, and oracles.",
      "security pitfalls (reentrancy, integer overflow).",
      "project: marketplace dapp with listings and escrow",
      "project: indexing with the graph",
      "use: ethers.js/web3.js, openzeppelin"
    ],
    "advanced": [
      "layer 2, rollups, bridges, and account abstraction.",
      "gas optimization and upgradeable contracts.",
      "project: cross-chain bridge poc",
      "project: aa smart wallet with session keys",
      "use: optimism/arbitrum, zksync/polygon, openzeppelin upgrades"
    ],
    "expert": [
      "formal verification and audits.",
      "protocol design and tokenomics.",
      "project: mev-resistant auction design",
      "project: on-chain governance module",
      "use: slither, echidna, foundry fuzzing"
    ]
  },
  "web3.js": {
    "domain": "blockchain & web3",
    "beginner": [
      "blockchain basics, wallets, transactions, gas, and networks.",
      "smart contract primitives and development workflows.",
      "project: token erc-20 or nft erc-721 on testnet",
      "project: simple crowdfunding dapp",
      "use: solidity, hardhat/foundry, metamask"
    ],
    "intermediate": [
      "dapp frontends, event indexing, and oracles.",
      "security pitfalls (reentrancy, integer overflow).",
      "project: marketplace dapp with listings and escrow",
      "project: indexing with the graph",
      "use: ethers.js/web3.js, openzeppelin"
    ],
    "advanced": [
      "layer 2, rollups, bridges, and account abstraction.",
      "gas optimization and upgradeable contracts.",
      "project: cross-chain bridge poc",
      "project: aa smart wallet with session keys",
      "use: optimism/arbitrum, zksync/polygon, openzeppelin upgrades"
    ],
    "expert": [
      "formal verification and audits.",
      "protocol design and tokenomics.",
      "project: mev-resistant auction design",
      "project: on-chain governance module",
      "use: slither, echidna, foundry fuzzing"
    ]
  },
  "truffle": {
    "domain": "blockchain & web3",
    "beginner": [
      "blockchain basics, wallets, transactions, gas, and networks.",
      "smart contract primitives and development workflows.",
      "project: token erc-20 or nft erc-721 on testnet",
      "project: simple crowdfunding dapp",
      "use: solidity, hardhat/foundry, metamask"
    ],
    "intermediate": [
      "dapp frontends, event indexing, and oracles.",
      "security pitfalls (reentrancy, integer overflow).",
      "project: marketplace dapp with listings and escrow",
      "project: indexing with the graph",
      "use: ethers.js/web3.js, openzeppelin"
    ],
    "advanced": [
      "layer 2, rollups, bridges, and account abstraction.",
      "gas optimization and upgradeable contracts.",
      "project: cross-chain bridge poc",
      "project: aa smart wallet with session keys",
      "use: optimism/arbitrum, zksync/polygon, openzeppelin upgrades"
    ],
    "expert": [
      "formal verification and audits.",
      "protocol design and tokenomics.",
      "project: mev-resistant auction design",
      "project: on-chain governance module",
      "use: slither, echidna, foundry fuzzing"
    ]
  },
  "hardhat": {
    "domain": "blockchain & web3",
    "beginner": [
      "blockchain basics, wallets, transactions, gas, and networks.",
      "smart contract primitives and development workflows.",
      "project: token erc-20 or nft erc-721 on testnet",
      "project: simple crowdfunding dapp",
      "use: solidity, hardhat/foundry, metamask"
    ],
    "intermediate": [
      "dapp frontends, event indexing, and oracles.",
      "security pitfalls (reentrancy, integer overflow).",
      "project: marketplace dapp with listings and escrow",
      "project: indexing with the graph",
      "use: ethers.js/web3.js, openzeppelin"
    ],
    "advanced": [
      "layer 2, rollups, bridges, and account abstraction.",
      "gas optimization and upgradeable contracts.",
      "project: cross-chain bridge poc",
      "project: aa smart wallet with session keys",
      "use: optimism/arbitrum, zksync/polygon, openzeppelin upgrades"
    ],
    "expert": [
      "formal verification and audits.",
      "protocol design and tokenomics.",
      "project: mev-resistant auction design",
      "project: on-chain governance module",
      "use: slither, echidna, foundry fuzzing"
    ]
  },
  "ipfs": {
    "domain": "blockchain & web3",
    "beginner": [
      "blockchain basics, wallets, transactions, gas, and networks.",
      "smart contract primitives and development workflows.",
      "project: token erc-20 or nft erc-721 on testnet",
      "project: simple crowdfunding dapp",
      "use: solidity, hardhat/foundry, metamask"
    ],
    "intermediate": [
      "dapp frontends, event indexing, and oracles.",
      "security pitfalls (reentrancy, integer overflow).",
      "project: marketplace dapp with listings and escrow",
      "project: indexing with the graph",
      "use: ethers.js/web3.js, openzeppelin"
    ],
    "advanced": [
      "layer 2, rollups, bridges, and account abstraction.",
      "gas optimization and upgradeable contracts.",
      "project: cross-chain bridge poc",
      "project: aa smart wallet with session keys",
      "use: optimism/arbitrum, zksync/polygon, openzeppelin upgrades"
    ],
    "expert": [
      "formal verification and audits.",
      "protocol design and tokenomics.",
      "project: mev-resistant auction design",
      "project: on-chain governance module",
      "use: slither, echidna, foundry fuzzing"
    ]
  },
  "decentralized storage": {
    "domain": "blockchain & web3",
    "beginner": [
      "blockchain basics, wallets, transactions, gas, and networks.",
      "smart contract primitives and development workflows.",
      "project: token erc-20 or nft erc-721 on testnet",
      "project: simple crowdfunding dapp",
      "use: solidity, hardhat/foundry, metamask"
    ],
    "intermediate": [
      "dapp frontends, event indexing, and oracles.",
      "security pitfalls (reentrancy, integer overflow).",
      "project: marketplace dapp with listings and escrow",
      "project: indexing with the graph",
      "use: ethers.js/web3.js, openzeppelin"
    ],
    "advanced": [
      "layer 2, rollups, bridges, and account abstraction.",
      "gas optimization and upgradeable contracts.",
      "project: cross-chain bridge poc",
      "project: aa smart wallet with session keys",
      "use: optimism/arbitrum, zksync/polygon, openzeppelin upgrades"
    ],
    "expert": [
      "formal verification and audits.",
      "protocol design and tokenomics.",
      "project: mev-resistant auction design",
      "project: on-chain governance module",
      "use: slither, echidna, foundry fuzzing"
    ]
  },
  "tableau": {
    "domain": "bi & analytics",
    "beginner": [
      "data modeling for bi, star/snowflake schemas.",
      "build basic dashboards.",
      "project: sales dashboard with drill-downs",
      "project: cohort analysis report",
      "use: power bi/tableau/looker studio"
    ],
    "intermediate": [
      "etl/elt from multiple sources and data blending.",
      "row-level security and governance.",
      "project: self-service bi with semantic model",
      "project: operational dashboards with alerts",
      "use: dbt, sql, connectors/apis"
    ],
    "advanced": [
      "performance tuning and incremental models.",
      "embedded analytics in apps.",
      "project: near real-time dashboards",
      "project: kpi catalog and data dictionary",
      "use: directquery/live connections, caching"
    ],
    "expert": [
      "enterprise bi strategy and data contracts.",
      "a/b testing and experiment analytics.",
      "project: experiment platform metrics",
      "project: bi platform with lineage and audits",
      "use: amundsen/datahub, monte carlo/great expectations"
    ]
  },
  "power bi": {
    "domain": "bi & analytics",
    "beginner": [
      "data modeling for bi, star/snowflake schemas.",
      "build basic dashboards.",
      "project: sales dashboard with drill-downs",
      "project: cohort analysis report",
      "use: power bi/tableau/looker studio"
    ],
    "intermediate": [
      "etl/elt from multiple sources and data blending.",
      "row-level security and governance.",
      "project: self-service bi with semantic model",
      "project: operational dashboards with alerts",
      "use: dbt, sql, connectors/apis"
    ],
    "advanced": [
      "performance tuning and incremental models.",
      "embedded analytics in apps.",
      "project: near real-time dashboards",
      "project: kpi catalog and data dictionary",
      "use: directquery/live connections, caching"
    ],
    "expert": [
      "enterprise bi strategy and data contracts.",
      "a/b testing and experiment analytics.",
      "project: experiment platform metrics",
      "project: bi platform with lineage and audits",
      "use: amundsen/datahub, monte carlo/great expectations"
    ]
  },
  "looker": {
    "domain": "bi & analytics",
    "beginner": [
      "data modeling for bi, star/snowflake schemas.",
      "build basic dashboards.",
      "project: sales dashboard with drill-downs",
      "project: cohort analysis report",
      "use: power bi/tableau/looker studio"
    ],
    "intermediate": [
      "etl/elt from multiple sources and data blending.",
      "row-level security and governance.",
      "project: self-service bi with semantic model",
      "project: operational dashboards with alerts",
      "use: dbt, sql, connectors/apis"
    ],
    "advanced": [
      "performance tuning and incremental models.",
      "embedded analytics in apps.",
      "project: near real-time dashboards",
      "project: kpi catalog and data dictionary",
      "use: directquery/live connections, caching"
    ],
    "expert": [
      "enterprise bi strategy and data contracts.",
      "a/b testing and experiment analytics.",
      "project: experiment platform metrics",
      "project: bi platform with lineage and audits",
      "use: amundsen/datahub, monte carlo/great expectations"
    ]
  },
  "qlik": {
    "domain": "bi & analytics",
    "beginner": [
      "data modeling for bi, star/snowflake schemas.",
      "build basic dashboards.",
      "project: sales dashboard with drill-downs",
      "project: cohort analysis report",
      "use: power bi/tableau/looker studio"
    ],
    "intermediate": [
      "etl/elt from multiple sources and data blending.",
      "row-level security and governance.",
      "project: self-service bi with semantic model",
      "project: operational dashboards with alerts",
      "use: dbt, sql, connectors/apis"
    ],
    "advanced": [
      "performance tuning and incremental models.",
      "embedded analytics in apps.",
      "project: near real-time dashboards",
      "project: kpi catalog and data dictionary",
      "use: directquery/live connections, caching"
    ],
    "expert": [
      "enterprise bi strategy and data contracts.",
      "a/b testing and experiment analytics.",
      "project: experiment platform metrics",
      "project: bi platform with lineage and audits",
      "use: amundsen/datahub, monte carlo/great expectations"
    ]
  },
  "excel": {
    "domain": "bi & analytics",
    "beginner": [
      "data modeling for bi, star/snowflake schemas.",
      "build basic dashboards.",
      "project: sales dashboard with drill-downs",
      "project: cohort analysis report",
      "use: power bi/tableau/looker studio"
    ],
    "intermediate": [
      "etl/elt from multiple sources and data blending.",
      "row-level security and governance.",
      "project: self-service bi with semantic model",
      "project: operational dashboards with alerts",
      "use: dbt, sql, connectors/apis"
    ],
    "advanced": [
      "performance tuning and incremental models.",
      "embedded analytics in apps.",
      "project: near real-time dashboards",
      "project: kpi catalog and data dictionary",
      "use: directquery/live connections, caching"
    ],
    "expert": [
      "enterprise bi strategy and data contracts.",
      "a/b testing and experiment analytics.",
      "project: experiment platform metrics",
      "project: bi platform with lineage and audits",
      "use: amundsen/datahub, monte carlo/great expectations"
    ]
  },
  "vba": {
    "domain": "bi & analytics",
    "beginner": [
      "data modeling for bi, star/snowflake schemas.",
      "build basic dashboards.",
      "project: sales dashboard with drill-downs",
      "project: cohort analysis report",
      "use: power bi/tableau/looker studio"
    ],
    "intermediate": [
      "etl/elt from multiple sources and data blending.",
      "row-level security and governance.",
      "project: self-service bi with semantic model",
      "project: operational dashboards with alerts",
      "use: dbt, sql, connectors/apis"
    ],
    "advanced": [
      "performance tuning and incremental models.",
      "embedded analytics in apps.",
      "project: near real-time dashboards",
      "project: kpi catalog and data dictionary",
      "use: directquery/live connections, caching"
    ],
    "expert": [
      "enterprise bi strategy and data contracts.",
      "a/b testing and experiment analytics.",
      "project: experiment platform metrics",
      "project: bi platform with lineage and audits",
      "use: amundsen/datahub, monte carlo/great expectations"
    ]
  },
  "google data studio": {
    "domain": "bi & analytics",
    "beginner": [
      "data modeling for bi, star/snowflake schemas.",
      "build basic dashboards.",
      "project: sales dashboard with drill-downs",
      "project: cohort analysis report",
      "use: power bi/tableau/looker studio"
    ],
    "intermediate": [
      "etl/elt from multiple sources and data blending.",
      "row-level security and governance.",
      "project: self-service bi with semantic model",
      "project: operational dashboards with alerts",
      "use: dbt, sql, connectors/apis"
    ],
    "advanced": [
      "performance tuning and incremental models.",
      "embedded analytics in apps.",
      "project: near real-time dashboards",
      "project: kpi catalog and data dictionary",
      "use: directquery/live connections, caching"
    ],
    "expert": [
      "enterprise bi strategy and data contracts.",
      "a/b testing and experiment analytics.",
      "project: experiment platform metrics",
      "project: bi platform with lineage and audits",
      "use: amundsen/datahub, monte carlo/great expectations"
    ]
  },
  "unity": {
    "domain": "gamedev & ar/vr",
    "beginner": [
      "game loop, scenes, input, physics basics.",
      "build small 2d games.",
      "project: pong/breakout clone",
      "project: endless runner with power-ups",
      "use: unity/godot/unreal basics"
    ],
    "intermediate": [
      "3d scenes, lighting, materials, shaders.",
      "state machines and ai for npcs.",
      "project: first-person maze with pathfinding",
      "project: platformer with level editor",
      "use: navmesh, shader graph"
    ],
    "advanced": [
      "networking for multiplayer and authoritative servers.",
      "optimization: batching, occlusion, profiling.",
      "project: co-op multiplayer demo",
      "project: vr/ar app with hand tracking",
      "use: photon/mirror/netcode, arcore/arkit"
    ],
    "expert": [
      "tooling and pipelines for content creation.",
      "performance on consoles/mobile and asset streaming.",
      "project: in-editor tooling for designers",
      "project: procedural world generation system",
      "use: dots/ecs, unreal gas"
    ]
  },
  "unreal engine": {
    "domain": "gamedev & ar/vr",
    "beginner": [
      "game loop, scenes, input, physics basics.",
      "build small 2d games.",
      "project: pong/breakout clone",
      "project: endless runner with power-ups",
      "use: unity/godot/unreal basics"
    ],
    "intermediate": [
      "3d scenes, lighting, materials, shaders.",
      "state machines and ai for npcs.",
      "project: first-person maze with pathfinding",
      "project: platformer with level editor",
      "use: navmesh, shader graph"
    ],
    "advanced": [
      "networking for multiplayer and authoritative servers.",
      "optimization: batching, occlusion, profiling.",
      "project: co-op multiplayer demo",
      "project: vr/ar app with hand tracking",
      "use: photon/mirror/netcode, arcore/arkit"
    ],
    "expert": [
      "tooling and pipelines for content creation.",
      "performance on consoles/mobile and asset streaming.",
      "project: in-editor tooling for designers",
      "project: procedural world generation system",
      "use: dots/ecs, unreal gas"
    ]
  },
  "game development": {
    "domain": "career path",
    "beginner": [
      "write an achievement-focused resume and github readme.",
      "create a simple portfolio highlighting projects.",
      "project: star-formatted resume",
      "project: portfolio with case studies",
      "use: ats-friendly templates, markdown/mdx"
    ],
    "intermediate": [
      "practice behavioral and technical interviews.",
      "contribute to oss and network with peers.",
      "project: mock interviews with feedback",
      "project: first oss pull request",
      "use: leetcode/neetcode, good first issue"
    ],
    "advanced": [
      "system design practice and on-call readiness.",
      "mentoring juniors and giving tech talks.",
      "project: design doc for a scalable service",
      "project: internal brown-bag session",
      "use: grokking sdi, c4 diagrams"
    ],
    "expert": [
      "community leadership and long-term career strategy.",
      "build a personal brand with consistent writing.",
      "project: conference talk/workshop",
      "project: newsletter/blog with original content",
      "use: cfp platforms, analytics"
    ]
  },
  "ar": {
    "domain": "gamedev & ar/vr",
    "beginner": [
      "game loop, scenes, input, physics basics.",
      "build small 2d games.",
      "project: pong/breakout clone",
      "project: endless runner with power-ups",
      "use: unity/godot/unreal basics"
    ],
    "intermediate": [
      "3d scenes, lighting, materials, shaders.",
      "state machines and ai for npcs.",
      "project: first-person maze with pathfinding",
      "project: platformer with level editor",
      "use: navmesh, shader graph"
    ],
    "advanced": [
      "networking for multiplayer and authoritative servers.",
      "optimization: batching, occlusion, profiling.",
      "project: co-op multiplayer demo",
      "project: vr/ar app with hand tracking",
      "use: photon/mirror/netcode, arcore/arkit"
    ],
    "expert": [
      "tooling and pipelines for content creation.",
      "performance on consoles/mobile and asset streaming.",
      "project: in-editor tooling for designers",
      "project: procedural world generation system",
      "use: dots/ecs, unreal gas"
    ]
  },
  "vr": {
    "domain": "gamedev & ar/vr",
    "beginner": [
      "game loop, scenes, input, physics basics.",
      "build small 2d games.",
      "project: pong/breakout clone",
      "project: endless runner with power-ups",
      "use: unity/godot/unreal basics"
    ],
    "intermediate": [
      "3d scenes, lighting, materials, shaders.",
      "state machines and ai for npcs.",
      "project: first-person maze with pathfinding",
      "project: platformer with level editor",
      "use: navmesh, shader graph"
    ],
    "advanced": [
      "networking for multiplayer and authoritative servers.",
      "optimization: batching, occlusion, profiling.",
      "project: co-op multiplayer demo",
      "project: vr/ar app with hand tracking",
      "use: photon/mirror/netcode, arcore/arkit"
    ],
    "expert": [
      "tooling and pipelines for content creation.",
      "performance on consoles/mobile and asset streaming.",
      "project: in-editor tooling for designers",
      "project: procedural world generation system",
      "use: dots/ecs, unreal gas"
    ]
  },
  "blender": {
    "domain": "gamedev & ar/vr",
    "beginner": [
      "game loop, scenes, input, physics basics.",
      "build small 2d games.",
      "project: pong/breakout clone",
      "project: endless runner with power-ups",
      "use: unity/godot/unreal basics"
    ],
    "intermediate": [
      "3d scenes, lighting, materials, shaders.",
      "state machines and ai for npcs.",
      "project: first-person maze with pathfinding",
      "project: platformer with level editor",
      "use: navmesh, shader graph"
    ],
    "advanced": [
      "networking for multiplayer and authoritative servers.",
      "optimization: batching, occlusion, profiling.",
      "project: co-op multiplayer demo",
      "project: vr/ar app with hand tracking",
      "use: photon/mirror/netcode, arcore/arkit"
    ],
    "expert": [
      "tooling and pipelines for content creation.",
      "performance on consoles/mobile and asset streaming.",
      "project: in-editor tooling for designers",
      "project: procedural world generation system",
      "use: dots/ecs, unreal gas"
    ]
  },
  "godot": {
    "domain": "gamedev & ar/vr",
    "beginner": [
      "game loop, scenes, input, physics basics.",
      "build small 2d games.",
      "project: pong/breakout clone",
      "project: endless runner with power-ups",
      "use: unity/godot/unreal basics"
    ],
    "intermediate": [
      "3d scenes, lighting, materials, shaders.",
      "state machines and ai for npcs.",
      "project: first-person maze with pathfinding",
      "project: platformer with level editor",
      "use: navmesh, shader graph"
    ],
    "advanced": [
      "networking for multiplayer and authoritative servers.",
      "optimization: batching, occlusion, profiling.",
      "project: co-op multiplayer demo",
      "project: vr/ar app with hand tracking",
      "use: photon/mirror/netcode, arcore/arkit"
    ],
    "expert": [
      "tooling and pipelines for content creation.",
      "performance on consoles/mobile and asset streaming.",
      "project: in-editor tooling for designers",
      "project: procedural world generation system",
      "use: dots/ecs, unreal gas"
    ]
  },
  "git": {
    "domain": "tools & os",
    "beginner": [
      "linux cli basics, package managers, file permissions.",
      "git workflows: feature branches, prs, code reviews.",
      "project: dotfiles repo and shell setup",
      "project: git hooks for lint/test automation",
      "use: bash/zsh, tmux, ripgrep/fd"
    ],
    "intermediate": [
      "shell scripting and task automation.",
      "observability and logs on linux.",
      "project: backup scripts with rotation",
      "project: log parsing + alerting",
      "use: cron/systemd timers, journald"
    ],
    "advanced": [
      "container tooling and minimal base images.",
      "security: least privilege, sandboxing.",
      "project: custom developer container images",
      "project: rbac + sudoers hardening",
      "use: podman/buildah, apparmor/selinux"
    ],
    "expert": [
      "build internal tooling and clis for teams.",
      "performance tuning and kernel basics.",
      "project: company cli with plugins",
      "project: ebpf-based observability tool",
      "use: ebpf/bcc, perf"
    ]
  },
  "github": {
    "domain": "tools & os",
    "beginner": [
      "linux cli basics, package managers, file permissions.",
      "git workflows: feature branches, prs, code reviews.",
      "project: dotfiles repo and shell setup",
      "project: git hooks for lint/test automation",
      "use: bash/zsh, tmux, ripgrep/fd"
    ],
    "intermediate": [
      "shell scripting and task automation.",
      "observability and logs on linux.",
      "project: backup scripts with rotation",
      "project: log parsing + alerting",
      "use: cron/systemd timers, journald"
    ],
    "advanced": [
      "container tooling and minimal base images.",
      "security: least privilege, sandboxing.",
      "project: custom developer container images",
      "project: rbac + sudoers hardening",
      "use: podman/buildah, apparmor/selinux"
    ],
    "expert": [
      "build internal tooling and clis for teams.",
      "performance tuning and kernel basics.",
      "project: company cli with plugins",
      "project: ebpf-based observability tool",
      "use: ebpf/bcc, perf"
    ]
  },
  "linux": {
    "domain": "tools & os",
    "beginner": [
      "linux cli basics, package managers, file permissions.",
      "git workflows: feature branches, prs, code reviews.",
      "project: dotfiles repo and shell setup",
      "project: git hooks for lint/test automation",
      "use: bash/zsh, tmux, ripgrep/fd"
    ],
    "intermediate": [
      "shell scripting and task automation.",
      "observability and logs on linux.",
      "project: backup scripts with rotation",
      "project: log parsing + alerting",
      "use: cron/systemd timers, journald"
    ],
    "advanced": [
      "container tooling and minimal base images.",
      "security: least privilege, sandboxing.",
      "project: custom developer container images",
      "project: rbac + sudoers hardening",
      "use: podman/buildah, apparmor/selinux"
    ],
    "expert": [
      "build internal tooling and clis for teams.",
      "performance tuning and kernel basics.",
      "project: company cli with plugins",
      "project: ebpf-based observability tool",
      "use: ebpf/bcc, perf"
    ]
  },
  "bash": {
    "domain": "tools & os",
    "beginner": [
      "linux cli basics, package managers, file permissions.",
      "git workflows: feature branches, prs, code reviews.",
      "project: dotfiles repo and shell setup",
      "project: git hooks for lint/test automation",
      "use: bash/zsh, tmux, ripgrep/fd"
    ],
    "intermediate": [
      "shell scripting and task automation.",
      "observability and logs on linux.",
      "project: backup scripts with rotation",
      "project: log parsing + alerting",
      "use: cron/systemd timers, journald"
    ],
    "advanced": [
      "container tooling and minimal base images.",
      "security: least privilege, sandboxing.",
      "project: custom developer container images",
      "project: rbac + sudoers hardening",
      "use: podman/buildah, apparmor/selinux"
    ],
    "expert": [
      "build internal tooling and clis for teams.",
      "performance tuning and kernel basics.",
      "project: company cli with plugins",
      "project: ebpf-based observability tool",
      "use: ebpf/bcc, perf"
    ]
  },
  "shell scripting": {
    "domain": "tools & os",
    "beginner": [
      "linux cli basics, package managers, file permissions.",
      "git workflows: feature branches, prs, code reviews.",
      "project: dotfiles repo and shell setup",
      "project: git hooks for lint/test automation",
      "use: bash/zsh, tmux, ripgrep/fd"
    ],
    "intermediate": [
      "shell scripting and task automation.",
      "observability and logs on linux.",
      "project: backup scripts with rotation",
      "project: log parsing + alerting",
      "use: cron/systemd timers, journald"
    ],
    "advanced": [
      "container tooling and minimal base images.",
      "security: least privilege, sandboxing.",
      "project: custom developer container images",
      "project: rbac + sudoers hardening",
      "use: podman/buildah, apparmor/selinux"
    ],
    "expert": [
      "build internal tooling and clis for teams.",
      "performance tuning and kernel basics.",
      "project: company cli with plugins",
      "project: ebpf-based observability tool",
      "use: ebpf/bcc, perf"
    ]
  },
  "powershell": {
    "domain": "tools & os",
    "beginner": [
      "linux cli basics, package managers, file permissions.",
      "git workflows: feature branches, prs, code reviews.",
      "project: dotfiles repo and shell setup",
      "project: git hooks for lint/test automation",
      "use: bash/zsh, tmux, ripgrep/fd"
    ],
    "intermediate": [
      "shell scripting and task automation.",
      "observability and logs on linux.",
      "project: backup scripts with rotation",
      "project: log parsing + alerting",
      "use: cron/systemd timers, journald"
    ],
    "advanced": [
      "container tooling and minimal base images.",
      "security: least privilege, sandboxing.",
      "project: custom developer container images",
      "project: rbac + sudoers hardening",
      "use: podman/buildah, apparmor/selinux"
    ],
    "expert": [
      "build internal tooling and clis for teams.",
      "performance tuning and kernel basics.",
      "project: company cli with plugins",
      "project: ebpf-based observability tool",
      "use: ebpf/bcc, perf"
    ]
  },
  "windows server": {
    "domain": "tools & os",
    "beginner": [
      "linux cli basics, package managers, file permissions.",
      "git workflows: feature branches, prs, code reviews.",
      "project: dotfiles repo and shell setup",
      "project: git hooks for lint/test automation",
      "use: bash/zsh, tmux, ripgrep/fd"
    ],
    "intermediate": [
      "shell scripting and task automation.",
      "observability and logs on linux.",
      "project: backup scripts with rotation",
      "project: log parsing + alerting",
      "use: cron/systemd timers, journald"
    ],
    "advanced": [
      "container tooling and minimal base images.",
      "security: least privilege, sandboxing.",
      "project: custom developer container images",
      "project: rbac + sudoers hardening",
      "use: podman/buildah, apparmor/selinux"
    ],
    "expert": [
      "build internal tooling and clis for teams.",
      "performance tuning and kernel basics.",
      "project: company cli with plugins",
      "project: ebpf-based observability tool",
      "use: ebpf/bcc, perf"
    ]
  },
  "microservices": {
    "domain": "architecture & patterns",
    "beginner": [
      "readability, solid, layered architectures.",
      "refactor a small app to clean architecture.",
      "project: refactor mvc → hexagonal",
      "project: design docs using adrs",
      "use: adr templates, plantuml/c4"
    ],
    "intermediate": [
      "event-driven systems, sagas, outbox/inbox.",
      "idempotency, retries, backpressure.",
      "project: order workflow with saga pattern",
      "project: event sourcing demo",
      "use: kafka, debezium, cdc"
    ],
    "advanced": [
      "scalability patterns: sharding, caching, cqrs.",
      "resilience: circuit breakers, bulkheads.",
      "project: high-scale read-model projections",
      "project: edge caching and invalidation strategy",
      "use: redis, resilience libraries"
    ],
    "expert": [
      "multi-region, cap trade-offs, consistency models.",
      "security and privacy by design.",
      "project: design a global chat platform",
      "project: blueprints for multi-tenant saas",
      "use: crdts, opa/abac"
    ]
  },
  "system design": {
    "domain": "architecture & patterns",
    "beginner": [
      "readability, solid, layered architectures.",
      "refactor a small app to clean architecture.",
      "project: refactor mvc → hexagonal",
      "project: design docs using adrs",
      "use: adr templates, plantuml/c4"
    ],
    "intermediate": [
      "event-driven systems, sagas, outbox/inbox.",
      "idempotency, retries, backpressure.",
      "project: order workflow with saga pattern",
      "project: event sourcing demo",
      "use: kafka, debezium, cdc"
    ],
    "advanced": [
      "scalability patterns: sharding, caching, cqrs.",
      "resilience: circuit breakers, bulkheads.",
      "project: high-scale read-model projections",
      "project: edge caching and invalidation strategy",
      "use: redis, resilience libraries"
    ],
    "expert": [
      "multi-region, cap trade-offs, consistency models.",
      "security and privacy by design.",
      "project: design a global chat platform",
      "project: blueprints for multi-tenant saas",
      "use: crdts, opa/abac"
    ]
  },
  "api design": {
    "domain": "architecture & patterns",
    "beginner": [
      "readability, solid, layered architectures.",
      "refactor a small app to clean architecture.",
      "project: refactor mvc → hexagonal",
      "project: design docs using adrs",
      "use: adr templates, plantuml/c4"
    ],
    "intermediate": [
      "event-driven systems, sagas, outbox/inbox.",
      "idempotency, retries, backpressure.",
      "project: order workflow with saga pattern",
      "project: event sourcing demo",
      "use: kafka, debezium, cdc"
    ],
    "advanced": [
      "scalability patterns: sharding, caching, cqrs.",
      "resilience: circuit breakers, bulkheads.",
      "project: high-scale read-model projections",
      "project: edge caching and invalidation strategy",
      "use: redis, resilience libraries"
    ],
    "expert": [
      "multi-region, cap trade-offs, consistency models.",
      "security and privacy by design.",
      "project: design a global chat platform",
      "project: blueprints for multi-tenant saas",
      "use: crdts, opa/abac"
    ]
  },
  "rest api": {
    "domain": "architecture & patterns",
    "beginner": [
      "readability, solid, layered architectures.",
      "refactor a small app to clean architecture.",
      "project: refactor mvc → hexagonal",
      "project: design docs using adrs",
      "use: adr templates, plantuml/c4"
    ],
    "intermediate": [
      "event-driven systems, sagas, outbox/inbox.",
      "idempotency, retries, backpressure.",
      "project: order workflow with saga pattern",
      "project: event sourcing demo",
      "use: kafka, debezium, cdc"
    ],
    "advanced": [
      "scalability patterns: sharding, caching, cqrs.",
      "resilience: circuit breakers, bulkheads.",
      "project: high-scale read-model projections",
      "project: edge caching and invalidation strategy",
      "use: redis, resilience libraries"
    ],
    "expert": [
      "multi-region, cap trade-offs, consistency models.",
      "security and privacy by design.",
      "project: design a global chat platform",
      "project: blueprints for multi-tenant saas",
      "use: crdts, opa/abac"
    ]
  },
  "graphql": {
    "domain": "architecture & patterns",
    "beginner": [
      "readability, solid, layered architectures.",
      "refactor a small app to clean architecture.",
      "project: refactor mvc → hexagonal",
      "project: design docs using adrs",
      "use: adr templates, plantuml/c4"
    ],
    "intermediate": [
      "event-driven systems, sagas, outbox/inbox.",
      "idempotency, retries, backpressure.",
      "project: order workflow with saga pattern",
      "project: event sourcing demo",
      "use: kafka, debezium, cdc"
    ],
    "advanced": [
      "scalability patterns: sharding, caching, cqrs.",
      "resilience: circuit breakers, bulkheads.",
      "project: high-scale read-model projections",
      "project: edge caching and invalidation strategy",
      "use: redis, resilience libraries"
    ],
    "expert": [
      "multi-region, cap trade-offs, consistency models.",
      "security and privacy by design.",
      "project: design a global chat platform",
      "project: blueprints for multi-tenant saas",
      "use: crdts, opa/abac"
    ]
  },
  "grpc": {
    "domain": "architecture & patterns",
    "beginner": [
      "readability, solid, layered architectures.",
      "refactor a small app to clean architecture.",
      "project: refactor mvc → hexagonal",
      "project: design docs using adrs",
      "use: adr templates, plantuml/c4"
    ],
    "intermediate": [
      "event-driven systems, sagas, outbox/inbox.",
      "idempotency, retries, backpressure.",
      "project: order workflow with saga pattern",
      "project: event sourcing demo",
      "use: kafka, debezium, cdc"
    ],
    "advanced": [
      "scalability patterns: sharding, caching, cqrs.",
      "resilience: circuit breakers, bulkheads.",
      "project: high-scale read-model projections",
      "project: edge caching and invalidation strategy",
      "use: redis, resilience libraries"
    ],
    "expert": [
      "multi-region, cap trade-offs, consistency models.",
      "security and privacy by design.",
      "project: design a global chat platform",
      "project: blueprints for multi-tenant saas",
      "use: crdts, opa/abac"
    ]
  },
  "protocol buffers": {
    "domain": "architecture & patterns",
    "beginner": [
      "readability, solid, layered architectures.",
      "refactor a small app to clean architecture.",
      "project: refactor mvc → hexagonal",
      "project: design docs using adrs",
      "use: adr templates, plantuml/c4"
    ],
    "intermediate": [
      "event-driven systems, sagas, outbox/inbox.",
      "idempotency, retries, backpressure.",
      "project: order workflow with saga pattern",
      "project: event sourcing demo",
      "use: kafka, debezium, cdc"
    ],
    "advanced": [
      "scalability patterns: sharding, caching, cqrs.",
      "resilience: circuit breakers, bulkheads.",
      "project: high-scale read-model projections",
      "project: edge caching and invalidation strategy",
      "use: redis, resilience libraries"
    ],
    "expert": [
      "multi-region, cap trade-offs, consistency models.",
      "security and privacy by design.",
      "project: design a global chat platform",
      "project: blueprints for multi-tenant saas",
      "use: crdts, opa/abac"
    ]
  },
  "service mesh": {
    "domain": "architecture & patterns",
    "beginner": [
      "readability, solid, layered architectures.",
      "refactor a small app to clean architecture.",
      "project: refactor mvc → hexagonal",
      "project: design docs using adrs",
      "use: adr templates, plantuml/c4"
    ],
    "intermediate": [
      "event-driven systems, sagas, outbox/inbox.",
      "idempotency, retries, backpressure.",
      "project: order workflow with saga pattern",
      "project: event sourcing demo",
      "use: kafka, debezium, cdc"
    ],
    "advanced": [
      "scalability patterns: sharding, caching, cqrs.",
      "resilience: circuit breakers, bulkheads.",
      "project: high-scale read-model projections",
      "project: edge caching and invalidation strategy",
      "use: redis, resilience libraries"
    ],
    "expert": [
      "multi-region, cap trade-offs, consistency models.",
      "security and privacy by design.",
      "project: design a global chat platform",
      "project: blueprints for multi-tenant saas",
      "use: crdts, opa/abac"
    ]
  },
  "event-driven architecture": {
    "domain": "architecture & patterns",
    "beginner": [
      "readability, solid, layered architectures.",
      "refactor a small app to clean architecture.",
      "project: refactor mvc → hexagonal",
      "project: design docs using adrs",
      "use: adr templates, plantuml/c4"
    ],
    "intermediate": [
      "event-driven systems, sagas, outbox/inbox.",
      "idempotency, retries, backpressure.",
      "project: order workflow with saga pattern",
      "project: event sourcing demo",
      "use: kafka, debezium, cdc"
    ],
    "advanced": [
      "scalability patterns: sharding, caching, cqrs.",
      "resilience: circuit breakers, bulkheads.",
      "project: high-scale read-model projections",
      "project: edge caching and invalidation strategy",
      "use: redis, resilience libraries"
    ],
    "expert": [
      "multi-region, cap trade-offs, consistency models.",
      "security and privacy by design.",
      "project: design a global chat platform",
      "project: blueprints for multi-tenant saas",
      "use: crdts, opa/abac"
    ]
  },
  "etl": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "data warehousing": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "snowflake": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "bigquery": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "presto": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "flink": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "beam": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "druid": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "hbase": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "glue": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "crm": {
    "domain": "enterprise & business",
    "beginner": [
      "core enterprise concepts: rbac, auditing, workflows, reporting.",
      "model common entities: accounts, contacts, opportunities, invoices.",
      "project: mini-crm: leads → opportunities → deals",
      "project: approval workflow with email notifications",
      "use: bpmn/camunda/temporal, rbac/abac"
    ],
    "intermediate": [
      "integrate with erp/crm apis and sso (oidc/saml).",
      "build customizable reports and dashboards.",
      "project: billing + invoicing module with taxes",
      "project: data sync between erp and data warehouse",
      "use: salesforce apis/apex, sap connectors/odata, dbt"
    ],
    "advanced": [
      "multi-tenant saas for enterprise with audit trails and data isolation.",
      "compliance (gdpr, soc2) and data governance.",
      "project: tenant-aware analytics with row-level security",
      "project: event-driven integrations with retries and dlqs",
      "use: kafka/debezium, openmetadata, lakehouse connectors"
    ],
    "expert": [
      "domain-driven design with bounded contexts and data contracts.",
      "scalable workflow engines and extensibility models (marketplaces).",
      "project: marketplace for extensions/apps",
      "project: contract-driven apis and slas for partners",
      "use: asyncapi, schema registry, backstage"
    ]
  },
  "salesforce": {
    "domain": "enterprise & business",
    "beginner": [
      "core enterprise concepts: rbac, auditing, workflows, reporting.",
      "model common entities: accounts, contacts, opportunities, invoices.",
      "project: mini-crm: leads → opportunities → deals",
      "project: approval workflow with email notifications",
      "use: bpmn/camunda/temporal, rbac/abac"
    ],
    "intermediate": [
      "integrate with erp/crm apis and sso (oidc/saml).",
      "build customizable reports and dashboards.",
      "project: billing + invoicing module with taxes",
      "project: data sync between erp and data warehouse",
      "use: salesforce apis/apex, sap connectors/odata, dbt"
    ],
    "advanced": [
      "multi-tenant saas for enterprise with audit trails and data isolation.",
      "compliance (gdpr, soc2) and data governance.",
      "project: tenant-aware analytics with row-level security",
      "project: event-driven integrations with retries and dlqs",
      "use: kafka/debezium, openmetadata, lakehouse connectors"
    ],
    "expert": [
      "domain-driven design with bounded contexts and data contracts.",
      "scalable workflow engines and extensibility models (marketplaces).",
      "project: marketplace for extensions/apps",
      "project: contract-driven apis and slas for partners",
      "use: asyncapi, schema registry, backstage"
    ]
  },
  "sap": {
    "domain": "enterprise & business",
    "beginner": [
      "core enterprise concepts: rbac, auditing, workflows, reporting.",
      "model common entities: accounts, contacts, opportunities, invoices.",
      "project: mini-crm: leads → opportunities → deals",
      "project: approval workflow with email notifications",
      "use: bpmn/camunda/temporal, rbac/abac"
    ],
    "intermediate": [
      "integrate with erp/crm apis and sso (oidc/saml).",
      "build customizable reports and dashboards.",
      "project: billing + invoicing module with taxes",
      "project: data sync between erp and data warehouse",
      "use: salesforce apis/apex, sap connectors/odata, dbt"
    ],
    "advanced": [
      "multi-tenant saas for enterprise with audit trails and data isolation.",
      "compliance (gdpr, soc2) and data governance.",
      "project: tenant-aware analytics with row-level security",
      "project: event-driven integrations with retries and dlqs",
      "use: kafka/debezium, openmetadata, lakehouse connectors"
    ],
    "expert": [
      "domain-driven design with bounded contexts and data contracts.",
      "scalable workflow engines and extensibility models (marketplaces).",
      "project: marketplace for extensions/apps",
      "project: contract-driven apis and slas for partners",
      "use: asyncapi, schema registry, backstage"
    ]
  },
  "odoo": {
    "domain": "enterprise & business",
    "beginner": [
      "core enterprise concepts: rbac, auditing, workflows, reporting.",
      "model common entities: accounts, contacts, opportunities, invoices.",
      "project: mini-crm: leads → opportunities → deals",
      "project: approval workflow with email notifications",
      "use: bpmn/camunda/temporal, rbac/abac"
    ],
    "intermediate": [
      "integrate with erp/crm apis and sso (oidc/saml).",
      "build customizable reports and dashboards.",
      "project: billing + invoicing module with taxes",
      "project: data sync between erp and data warehouse",
      "use: salesforce apis/apex, sap connectors/odata, dbt"
    ],
    "advanced": [
      "multi-tenant saas for enterprise with audit trails and data isolation.",
      "compliance (gdpr, soc2) and data governance.",
      "project: tenant-aware analytics with row-level security",
      "project: event-driven integrations with retries and dlqs",
      "use: kafka/debezium, openmetadata, lakehouse connectors"
    ],
    "expert": [
      "domain-driven design with bounded contexts and data contracts.",
      "scalable workflow engines and extensibility models (marketplaces).",
      "project: marketplace for extensions/apps",
      "project: contract-driven apis and slas for partners",
      "use: asyncapi, schema registry, backstage"
    ]
  },
  "erp concepts": {
    "domain": "enterprise & business",
    "beginner": [
      "core enterprise concepts: rbac, auditing, workflows, reporting.",
      "model common entities: accounts, contacts, opportunities, invoices.",
      "project: mini-crm: leads → opportunities → deals",
      "project: approval workflow with email notifications",
      "use: bpmn/camunda/temporal, rbac/abac"
    ],
    "intermediate": [
      "integrate with erp/crm apis and sso (oidc/saml).",
      "build customizable reports and dashboards.",
      "project: billing + invoicing module with taxes",
      "project: data sync between erp and data warehouse",
      "use: salesforce apis/apex, sap connectors/odata, dbt"
    ],
    "advanced": [
      "multi-tenant saas for enterprise with audit trails and data isolation.",
      "compliance (gdpr, soc2) and data governance.",
      "project: tenant-aware analytics with row-level security",
      "project: event-driven integrations with retries and dlqs",
      "use: kafka/debezium, openmetadata, lakehouse connectors"
    ],
    "expert": [
      "domain-driven design with bounded contexts and data contracts.",
      "scalable workflow engines and extensibility models (marketplaces).",
      "project: marketplace for extensions/apps",
      "project: contract-driven apis and slas for partners",
      "use: asyncapi, schema registry, backstage"
    ]
  },
  "business analysis": {
    "domain": "enterprise & business",
    "beginner": [
      "core enterprise concepts: rbac, auditing, workflows, reporting.",
      "model common entities: accounts, contacts, opportunities, invoices.",
      "project: mini-crm: leads → opportunities → deals",
      "project: approval workflow with email notifications",
      "use: bpmn/camunda/temporal, rbac/abac"
    ],
    "intermediate": [
      "integrate with erp/crm apis and sso (oidc/saml).",
      "build customizable reports and dashboards.",
      "project: billing + invoicing module with taxes",
      "project: data sync between erp and data warehouse",
      "use: salesforce apis/apex, sap connectors/odata, dbt"
    ],
    "advanced": [
      "multi-tenant saas for enterprise with audit trails and data isolation.",
      "compliance (gdpr, soc2) and data governance.",
      "project: tenant-aware analytics with row-level security",
      "project: event-driven integrations with retries and dlqs",
      "use: kafka/debezium, openmetadata, lakehouse connectors"
    ],
    "expert": [
      "domain-driven design with bounded contexts and data contracts.",
      "scalable workflow engines and extensibility models (marketplaces).",
      "project: marketplace for extensions/apps",
      "project: contract-driven apis and slas for partners",
      "use: asyncapi, schema registry, backstage"
    ]
  },
  "e-commerce": {
    "domain": "e-commerce & cms",
    "beginner": [
      "content modeling and theming.",
      "basic storefront or site setup.",
      "project: blog/cms site with custom theme",
      "project: storefront with product catalog",
      "use: wordpress/shopify/woocommerce/strapi"
    ],
    "intermediate": [
      "plugins, headless cms, and api consumption.",
      "checkout flows and payment gateways.",
      "project: headless cms + next.js storefront",
      "project: custom plugin or app for the platform",
      "use: stripe, webhooks"
    ],
    "advanced": [
      "multi-language, multi-currency, and tax/vat.",
      "search, recommendations, and personalization.",
      "project: composable commerce with micro frontends",
      "project: search with elasticsearch/algolia",
      "use: commerce apis, algolia/es"
    ],
    "expert": [
      "omnichannel architecture and erp integration.",
      "content governance and performance at scale.",
      "project: marketplace platform",
      "project: editorial workflow and preview environments",
      "use: graphql federation, cdn/edge"
    ]
  },
  "shopify": {
    "domain": "e-commerce & cms",
    "beginner": [
      "content modeling and theming.",
      "basic storefront or site setup.",
      "project: blog/cms site with custom theme",
      "project: storefront with product catalog",
      "use: wordpress/shopify/woocommerce/strapi"
    ],
    "intermediate": [
      "plugins, headless cms, and api consumption.",
      "checkout flows and payment gateways.",
      "project: headless cms + next.js storefront",
      "project: custom plugin or app for the platform",
      "use: stripe, webhooks"
    ],
    "advanced": [
      "multi-language, multi-currency, and tax/vat.",
      "search, recommendations, and personalization.",
      "project: composable commerce with micro frontends",
      "project: search with elasticsearch/algolia",
      "use: commerce apis, algolia/es"
    ],
    "expert": [
      "omnichannel architecture and erp integration.",
      "content governance and performance at scale.",
      "project: marketplace platform",
      "project: editorial workflow and preview environments",
      "use: graphql federation, cdn/edge"
    ]
  },
  "woocommerce": {
    "domain": "e-commerce & cms",
    "beginner": [
      "content modeling and theming.",
      "basic storefront or site setup.",
      "project: blog/cms site with custom theme",
      "project: storefront with product catalog",
      "use: wordpress/shopify/woocommerce/strapi"
    ],
    "intermediate": [
      "plugins, headless cms, and api consumption.",
      "checkout flows and payment gateways.",
      "project: headless cms + next.js storefront",
      "project: custom plugin or app for the platform",
      "use: stripe, webhooks"
    ],
    "advanced": [
      "multi-language, multi-currency, and tax/vat.",
      "search, recommendations, and personalization.",
      "project: composable commerce with micro frontends",
      "project: search with elasticsearch/algolia",
      "use: commerce apis, algolia/es"
    ],
    "expert": [
      "omnichannel architecture and erp integration.",
      "content governance and performance at scale.",
      "project: marketplace platform",
      "project: editorial workflow and preview environments",
      "use: graphql federation, cdn/edge"
    ]
  },
  "magento": {
    "domain": "e-commerce & cms",
    "beginner": [
      "content modeling and theming.",
      "basic storefront or site setup.",
      "project: blog/cms site with custom theme",
      "project: storefront with product catalog",
      "use: wordpress/shopify/woocommerce/strapi"
    ],
    "intermediate": [
      "plugins, headless cms, and api consumption.",
      "checkout flows and payment gateways.",
      "project: headless cms + next.js storefront",
      "project: custom plugin or app for the platform",
      "use: stripe, webhooks"
    ],
    "advanced": [
      "multi-language, multi-currency, and tax/vat.",
      "search, recommendations, and personalization.",
      "project: composable commerce with micro frontends",
      "project: search with elasticsearch/algolia",
      "use: commerce apis, algolia/es"
    ],
    "expert": [
      "omnichannel architecture and erp integration.",
      "content governance and performance at scale.",
      "project: marketplace platform",
      "project: editorial workflow and preview environments",
      "use: graphql federation, cdn/edge"
    ]
  },
  "wordpress": {
    "domain": "e-commerce & cms",
    "beginner": [
      "content modeling and theming.",
      "basic storefront or site setup.",
      "project: blog/cms site with custom theme",
      "project: storefront with product catalog",
      "use: wordpress/shopify/woocommerce/strapi"
    ],
    "intermediate": [
      "plugins, headless cms, and api consumption.",
      "checkout flows and payment gateways.",
      "project: headless cms + next.js storefront",
      "project: custom plugin or app for the platform",
      "use: stripe, webhooks"
    ],
    "advanced": [
      "multi-language, multi-currency, and tax/vat.",
      "search, recommendations, and personalization.",
      "project: composable commerce with micro frontends",
      "project: search with elasticsearch/algolia",
      "use: commerce apis, algolia/es"
    ],
    "expert": [
      "omnichannel architecture and erp integration.",
      "content governance and performance at scale.",
      "project: marketplace platform",
      "project: editorial workflow and preview environments",
      "use: graphql federation, cdn/edge"
    ]
  },
  "drupal": {
    "domain": "e-commerce & cms",
    "beginner": [
      "content modeling and theming.",
      "basic storefront or site setup.",
      "project: blog/cms site with custom theme",
      "project: storefront with product catalog",
      "use: wordpress/shopify/woocommerce/strapi"
    ],
    "intermediate": [
      "plugins, headless cms, and api consumption.",
      "checkout flows and payment gateways.",
      "project: headless cms + next.js storefront",
      "project: custom plugin or app for the platform",
      "use: stripe, webhooks"
    ],
    "advanced": [
      "multi-language, multi-currency, and tax/vat.",
      "search, recommendations, and personalization.",
      "project: composable commerce with micro frontends",
      "project: search with elasticsearch/algolia",
      "use: commerce apis, algolia/es"
    ],
    "expert": [
      "omnichannel architecture and erp integration.",
      "content governance and performance at scale.",
      "project: marketplace platform",
      "project: editorial workflow and preview environments",
      "use: graphql federation, cdn/edge"
    ]
  },
  "logging": {
    "domain": "observability & monitoring",
    "beginner": [
      "logs vs metrics vs traces; labeling and cardinality.",
      "set up a basic stack for an app.",
      "project: centralized logging with elk/osl",
      "project: service metrics and dashboards",
      "use: prometheus, grafana, opentelemetry"
    ],
    "intermediate": [
      "alerting, slos, and runbooks.",
      "tracing distributed requests.",
      "project: jaeger/tempo traces across services",
      "project: blackbox exporter for external probes",
      "use: alertmanager, tempo/jaeger"
    ],
    "advanced": [
      "cardinality control, exemplars, and high-volume pipelines.",
      "cost-efficient retention and tiered storage.",
      "project: loki with s3 + index gateway",
      "project: metrics federation and rollups",
      "use: mimir/thanos, loki, cortex"
    ],
    "expert": [
      "observability-driven development and auto-instrumentation.",
      "sre practices and incident command.",
      "project: error budget policy implementation",
      "project: service health scorecards",
      "use: slo tooling, otel semantic conventions"
    ]
  },
  "tracing": {
    "domain": "observability & monitoring",
    "beginner": [
      "logs vs metrics vs traces; labeling and cardinality.",
      "set up a basic stack for an app.",
      "project: centralized logging with elk/osl",
      "project: service metrics and dashboards",
      "use: prometheus, grafana, opentelemetry"
    ],
    "intermediate": [
      "alerting, slos, and runbooks.",
      "tracing distributed requests.",
      "project: jaeger/tempo traces across services",
      "project: blackbox exporter for external probes",
      "use: alertmanager, tempo/jaeger"
    ],
    "advanced": [
      "cardinality control, exemplars, and high-volume pipelines.",
      "cost-efficient retention and tiered storage.",
      "project: loki with s3 + index gateway",
      "project: metrics federation and rollups",
      "use: mimir/thanos, loki, cortex"
    ],
    "expert": [
      "observability-driven development and auto-instrumentation.",
      "sre practices and incident command.",
      "project: error budget policy implementation",
      "project: service health scorecards",
      "use: slo tooling, otel semantic conventions"
    ]
  },
  "opentelemetry": {
    "domain": "observability & monitoring",
    "beginner": [
      "logs vs metrics vs traces; labeling and cardinality.",
      "set up a basic stack for an app.",
      "project: centralized logging with elk/osl",
      "project: service metrics and dashboards",
      "use: prometheus, grafana, opentelemetry"
    ],
    "intermediate": [
      "alerting, slos, and runbooks.",
      "tracing distributed requests.",
      "project: jaeger/tempo traces across services",
      "project: blackbox exporter for external probes",
      "use: alertmanager, tempo/jaeger"
    ],
    "advanced": [
      "cardinality control, exemplars, and high-volume pipelines.",
      "cost-efficient retention and tiered storage.",
      "project: loki with s3 + index gateway",
      "project: metrics federation and rollups",
      "use: mimir/thanos, loki, cortex"
    ],
    "expert": [
      "observability-driven development and auto-instrumentation.",
      "sre practices and incident command.",
      "project: error budget policy implementation",
      "project: service health scorecards",
      "use: slo tooling, otel semantic conventions"
    ]
  },
  "application performance monitoring": {
    "domain": "observability & monitoring",
    "beginner": [
      "logs vs metrics vs traces; labeling and cardinality.",
      "set up a basic stack for an app.",
      "project: centralized logging with elk/osl",
      "project: service metrics and dashboards",
      "use: prometheus, grafana, opentelemetry"
    ],
    "intermediate": [
      "alerting, slos, and runbooks.",
      "tracing distributed requests.",
      "project: jaeger/tempo traces across services",
      "project: blackbox exporter for external probes",
      "use: alertmanager, tempo/jaeger"
    ],
    "advanced": [
      "cardinality control, exemplars, and high-volume pipelines.",
      "cost-efficient retention and tiered storage.",
      "project: loki with s3 + index gateway",
      "project: metrics federation and rollups",
      "use: mimir/thanos, loki, cortex"
    ],
    "expert": [
      "observability-driven development and auto-instrumentation.",
      "sre practices and incident command.",
      "project: error budget policy implementation",
      "project: service health scorecards",
      "use: slo tooling, otel semantic conventions"
    ]
  },
  "rpa": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "robotic process automation": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "automation testing": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "ci/cd pipelines": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "continuous delivery": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "observability": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "data visualization": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "oauth": {
    "domain": "security & networking",
    "beginner": [
      "networking layers (osi/tcp/ip), subnets, routing, dns, tls.",
      "security basics: cia triad, authn/z, hashing vs encryption.",
      "project: packet lab with wireshark",
      "project: harden a web app against owasp top 10",
      "use: nmap, wireshark, owasp zap"
    ],
    "intermediate": [
      "identity and access (oauth2/oidc), sso, mfa.",
      "network security: firewalls, vpns, ids/ips.",
      "project: sso via oidc for a sample app",
      "project: ids with suricata + elk",
      "use: keycloak, suricata/snort, zeek"
    ],
    "advanced": [
      "threat modeling, zero trust, secrets management.",
      "security testing automation and supply-chain security.",
      "project: sbom + sca in ci/cd",
      "project: mtls service mesh with policy enforcement",
      "use: sigstore/cosign, trivy, opa/kyverno"
    ],
    "expert": [
      "incident response, forensics, and red/blue/purple teaming.",
      "cloud-native security and compliance frameworks.",
      "project: attack simulation lab and playbooks",
      "project: multi-cloud waf + ddos protection strategy",
      "use: mitre att&ck, aws/gcp/azure security services"
    ]
  },
  "websockets": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "edge computing": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "container security": {
    "domain": "security & networking",
    "beginner": [
      "networking layers (osi/tcp/ip), subnets, routing, dns, tls.",
      "security basics: cia triad, authn/z, hashing vs encryption.",
      "project: packet lab with wireshark",
      "project: harden a web app against owasp top 10",
      "use: nmap, wireshark, owasp zap"
    ],
    "intermediate": [
      "identity and access (oauth2/oidc), sso, mfa.",
      "network security: firewalls, vpns, ids/ips.",
      "project: sso via oidc for a sample app",
      "project: ids with suricata + elk",
      "use: keycloak, suricata/snort, zeek"
    ],
    "advanced": [
      "threat modeling, zero trust, secrets management.",
      "security testing automation and supply-chain security.",
      "project: sbom + sca in ci/cd",
      "project: mtls service mesh with policy enforcement",
      "use: sigstore/cosign, trivy, opa/kyverno"
    ],
    "expert": [
      "incident response, forensics, and red/blue/purple teaming.",
      "cloud-native security and compliance frameworks.",
      "project: attack simulation lab and playbooks",
      "project: multi-cloud waf + ddos protection strategy",
      "use: mitre att&ck, aws/gcp/azure security services"
    ]
  },
  "mobile performance optimization": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "accessibility": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "localization": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "internationalization": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "functional programming": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "reactive programming": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "concurrency": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "parallel programming": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "high performance computing": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "compiler design": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "database indexing": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "query optimization": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "data governance": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "data lineage": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "data catalog": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "model serving": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "reinforcement learning": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "gans": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "recommendation systems": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "time series analysis": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "anomaly detection": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "graph databases": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "spatial databases": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "geospatial analysis": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "telemetry": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "chaos engineering": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "blue-green deployment": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "canary releases": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "feature flags": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "policy as code": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "infrastructure as code": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "edge ai": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "tinyml": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "federated learning": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "privacy-preserving ml": {
    "domain": "data & machine learning",
    "beginner": [
      "python + pandas/numpy for data cleaning and eda.",
      "visualization and storytelling.",
      "project: eda report on public dataset",
      "project: linear regression for house prices",
      "use: matplotlib/plotly, scikit-learn"
    ],
    "intermediate": [
      "feature engineering, cross-validation, pipelines.",
      "model selection and hyperparameter tuning.",
      "project: churn prediction with imbalanced data handling",
      "project: time series forecasting (arima/prophet)",
      "use: xgboost/lightgbm, mlflow"
    ],
    "advanced": [
      "explainability (shap/lime), drift detection.",
      "data versioning and reproducibility.",
      "project: model monitoring with alerts",
      "project: batch + streaming features with feast",
      "use: dvc, great expectations, feast"
    ],
    "expert": [
      "production ml systems design and cost optimization.",
      "online learning, bandits, or causal inference.",
      "project: real-time recommendations with kafka",
      "project: uplift modeling for marketing",
      "use: ray, feast online store, airflow/prefect"
    ]
  },
  "differential privacy": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "explainable ai": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "model interpretability": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "a/b testing": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "experimentation": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "knowledge graphs": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "ontology design": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "data monetization": {
    "domain": "big data & data engineering",
    "beginner": [
      "distributed systems basics, hdfs/parquet, data modeling.",
      "batch processing with spark.",
      "project: etl: csv → parquet with spark",
      "project: data lake ingestion and partitioning",
      "use: spark, pyspark, parquet, delta lake"
    ],
    "intermediate": [
      "workflow orchestration and data quality checks.",
      "streaming with kafka + spark/flink.",
      "project: cdc pipeline from oltp to warehouse",
      "project: real-time clickstream analytics",
      "use: airflow/prefect, dbt, kafka, flink"
    ],
    "advanced": [
      "lakehouse architecture and medallion layers.",
      "query engines and optimization.",
      "project: delta lake with time-travel + z-order",
      "project: presto/trino + iceberg benchmarking",
      "use: iceberg/hudi/delta, trino/presto"
    ],
    "expert": [
      "data governance, catalog, lineage, and privacy.",
      "multi-region data meshes and slas.",
      "project: data mesh with domain-owned pipelines",
      "project: lineage with openlineage/marquez",
      "use: amundsen/datahub, openmetadata"
    ]
  },
  "payment gateways": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "pci compliance": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "content delivery networks": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "cdn": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "image processing": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "audio processing": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "speech recognition": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "signal processing": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "spatial audio": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "streaming media": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "video encoding": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "real-time systems": {
    "domain": "misc & automation",
    "beginner": [
      "automate repetitive tasks: file ops, csv/excel cleanup, renaming, backups.",
      "web scraping basics with polite rate limits.",
      "project: batch rename + exif/metadata organizer",
      "project: scrape job listings into a csv/db",
      "use: python + pathlib, pandas/openpyxl, beautifulsoup/selenium"
    ],
    "intermediate": [
      "apis, email and messaging automation, and scheduling.",
      "pdf parsing, ocr, and report generation.",
      "project: daily report bot that emails kpis",
      "project: invoice ocr to structured json",
      "use: airflow/cron, pdfplumber/tesseract, smtplib/imap"
    ],
    "advanced": [
      "robotic process automation (rpa) and headless browsers.",
      "enterprise integrations and webhooks.",
      "project: rpa bot for form filling and approvals",
      "project: automation platform with plugin system",
      "use: playwright, uipath/tagui, n8n/temporal"
    ],
    "expert": [
      "reliability, retries, idempotency, and auditing for automation.",
      "cost control, concurrency, and security (secrets, pii).",
      "project: self-healing automation with dead-letter queues",
      "project: compliance-friendly audit trails and masking",
      "use: vault/secrets manager, queues (sqs/rabbitmq)"
    ]
  },
  "web development": {
    "domain": "web development",
    "beginner": [
      "learn html and css fundamentals (elements, styling, layout, flexbox, grid).",
      "understand javascript basics (variables, functions, events, dom manipulation).",
      "project: personal portfolio website with responsive design"
    ],
    "intermediate": [
      "learn modern javascript (es6+ features like promises, async/await, modules).",
      "work with a frontend framework/library (react, vue, or angular).",
      "project: blog platform with authentication and comments"
    ],
    "advanced": [
      "learn backend frameworks (node.js/express, django, or flask).",
      "understand rest apis, graphql, and database integration (mysql/postgresql/mongodb).",
      "project: e-commerce site with cart, payments, and admin dashboard"
    ],
    "expert": [
      "optimize web apps for performance (lazy loading, caching, code splitting).",
      "implement advanced topics: ci/cd, security best practices, testing, seo, accessibility.",
      "contribute to open-source frameworks or build your own reusable library"
    ],
    "careers": [
      "Frontend Developer",
      "Backend Developer",
      "Full-Stack Developer",
      "Web Application Engineer"
    ]
  },
  "artificial intelligence": {
    "domain": "ai",
    "beginner": [
      "learn python for ai (numpy, pandas, matplotlib).",
      "understand basic ml models like linear/logistic regression.",
      "project: predict house prices with linear regression"
    ],
    "intermediate": [
      "learn neural networks and backpropagation.",
      "work with tensorflow or pytorch.",
      "project: image classifier on cifar-10",
      "project: sentiment analyzer on tweets"
    ],
    "advanced": [
      "study cnns, rnns, transformers, and gans.",
      "project: object detection with yolo or detectron2",
      "project: text summarizer fine-tuned from bert"
    ],
    "expert": [
      "optimize and deploy large models (quantization, distillation, gpus/tpus).",
      "contribute to open-source ai frameworks (pytorch, tensorflow).",
      "project: end-to-end ai pipeline with monitoring and feedback loops"
    ],
    "careers": [
      "Artificial Intelligence Engineer",
      "Machine Learning Engineer",
      "Deep Learning Engineer",
      "AI Research Scientist"
    ]
  },
  "mobile development": {
    "domain": "mobile & cross-platform",
    "beginner": [
      "learn platform basics (android with kotlin/java or ios with swift).",
      "understand layouts, navigation, and local storage.",
      "project: to-do list app"
    ],
    "intermediate": [
      "work with rest apis, authentication, and notifications.",
      "project: weather app with api integration",
      "project: chat app with firebase"
    ],
    "advanced": [
      "implement offline-first sync, background tasks, and modularization.",
      "project: e-commerce app with cart and payments"
    ],
    "expert": [
      "optimize for performance and scalability.",
      "publish apps to the play store/app store.",
      "contribute to mobile frameworks or libraries."
    ],
    "careers": [
      "Mobile App Developer",
      "iOS Developer",
      "Android Developer",
      "Cross-Platform Developer (Flutter/React Native)"
    ]
  },
  "devops": {
    "domain": "cloud & devops",
    "beginner": [
      "learn linux basics, git, and ci/cd fundamentals.",
      "understand docker containers and compose.",
      "project: containerize a web app"
    ],
    "intermediate": [
      "kubernetes fundamentals: pods, deployments, services.",
      "project: deploy an app with kubernetes and helm"
    ],
    "advanced": [
      "set up monitoring, logging, and alerting.",
      "implement blue/green or canary deployments.",
      "project: ci/cd pipeline with github actions + argocd"
    ],
    "expert": [
      "design multi-region ha systems with iac (terraform, pulumi).",
      "optimize cost and implement security best practices.",
      "project: internal developer platform with golden paths"
    ],
    "careers": [
      "DevOps Engineer",
      "Site Reliability Engineer (SRE)",
      "Cloud DevOps Engineer",
      "Infrastructure Engineer"
    ]
  },
  "cloud computing": {
    "domain": "cloud & devops",
    "beginner": [
      "understand cloud basics: iam, networking, storage, compute.",
      "project: deploy a static website on aws s3 or gcp cloud storage"
    ],
    "intermediate": [
      "learn managed databases, load balancers, and autoscaling.",
      "project: deploy a 3-tier app (frontend + backend + db) in the cloud"
    ],
    "advanced": [
      "design fault-tolerant, multi-az applications.",
      "project: serverless app with aws lambda / gcp cloud functions"
    ],
    "expert": [
      "architect multi-region deployments with disaster recovery.",
      "work on cost optimization and compliance (soc2, gdpr).",
      "project: cloud-native saas with monitoring and governance"
    ],
    "careers": [
      "Cloud Engineer",
      "DevOps Engineer",
      "Cloud Solutions Architect",
      "Site Reliability Engineer (SRE)"
    ]
  },
  "ui/ux design": {
    "domain": "design & product",
    "beginner": [
      "learn fundamentals of design: color theory, typography, spacing, and alignment.",
      "understand ui basics: wireframing, layout, and navigation.",
      "project: redesign a landing page for better readability"
    ],
    "intermediate": [
      "work with tools like figma, adobe xd, or sketch.",
      "learn user research basics: personas, journey maps, usability testing.",
      "project: design a mobile app prototype with interactive flows"
    ],
    "advanced": [
      "build and document a design system with reusable components.",
      "understand accessibility standards (wcag) and responsive design.",
      "project: create a multi-platform design system with light/dark modes"
    ],
    "expert": [
      "lead ux workshops and usability studies.",
      "contribute to open-source design systems or write ux case studies.",
      "project: overhaul a real product’s ux and present as a portfolio case study"
    ],
    "careers": [
      "UI Designer",
      "UX Designer",
      "Product Designer",
      "Interaction Designer"
    ]
  },
  "blockchain development": {
    "domain": "blockchain & web3",
    "beginner": [
      "understand blockchain basics: blocks, consensus, wallets, transactions.",
      "learn ethereum and smart contract fundamentals.",
      "project: simple erc-20 token"
    ],
    "intermediate": [
      "build smart contracts with solidity and deploy to testnets.",
      "learn dapp architecture with web3.js or ethers.js.",
      "project: decentralized voting app"
    ],
    "advanced": [
      "work with defi concepts: staking, liquidity pools, yield farming.",
      "project: nft marketplace with ipfs integration"
    ],
    "expert": [
      "design scalable and secure protocols.",
      "contribute to blockchain frameworks or layer-2 solutions.",
      "project: custom blockchain or consensus mechanism"
    ],
    "careers": [
      "Blockchain Developer",
      "Smart Contract Engineer",
      "Web3 Developer",
      "Crypto Engineer"
    ]
  },
  "big data": {
    "domain": "big data & data engineering",
    "beginner": [
      "learn data pipelines, etl basics, and sql at scale.",
      "understand distributed systems concepts.",
      "project: batch data ingestion from csv into a database"
    ],
    "intermediate": [
      "work with hadoop ecosystem: hdfs, mapreduce, hive.",
      "learn apache spark basics.",
      "project: real-time log analysis with spark streaming"
    ],
    "advanced": [
      "build scalable etl pipelines with kafka + spark + cassandra/redshift.",
      "project: data lake architecture with s3 + glue + athena"
    ],
    "expert": [
      "implement advanced data governance and lineage.",
      "optimize pipelines for petabyte-scale workloads.",
      "project: enterprise-grade data warehouse with monitoring and cost control"
    ]
  },
  "robotics": {
    "domain": "robotics & embedded systems",
    "beginner": [
      "learn robotics basics with arduino or raspberry pi.",
      "understand sensors (ultrasonic, ir) and actuators (motors, servos).",
      "project: line-following robot"
    ],
    "intermediate": [
      "work with robot operating system (ros).",
      "integrate computer vision with opencv.",
      "project: object-tracking robotic arm"
    ],
    "advanced": [
      "implement slam (simultaneous localization and mapping).",
      "build autonomous navigation systems with lidar.",
      "project: autonomous drone with obstacle avoidance"
    ],
    "expert": [
      "contribute to robotics research (swarm robotics, humanoid robots).",
      "work on industrial robots with real-time control systems.",
      "project: multi-robot coordination for warehouse automation"
    ]
  },
  "figma": {
    "domain": "ui/ux design",
    "beginner": [
      "learn figma basics: frames, layers, shapes, text, and components.",
      "project: redesign a simple landing page"
    ],
    "intermediate": [
      "build design systems with components and variants.",
      "project: mobile app prototype with interactive flows"
    ],
    "advanced": [
      "collaborate with dev handoff (inspect, export, plugins).",
      "project: interactive prototype with animations"
    ],
    "expert": [
      "contribute to open-source design libraries.",
      "project: scalable multi-brand design system"
    ]
  },
  "canva": {
    "domain": "ui/ux design",
    "beginner": [
      "learn canva basics: templates, fonts, layouts, and color palettes.",
      "project: poster or social media graphic"
    ],
    "intermediate": [
      "customize templates and brand kits.",
      "project: resume and portfolio designs"
    ],
    "advanced": [
      "collaborate in canva teams, use advanced editing.",
      "project: marketing campaign with multiple assets"
    ],
    "expert": [
      "create and sell canva templates.",
      "project: full brand identity kit"
    ]
  }
}